/*! For license information please see blocks.min.js.LICENSE.txt */
(()=>{"use strict";var __webpack_modules__={"./Assets/js/src/blocks.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("{__webpack_require__.r(__webpack_exports__);\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/* global wp */\n(function () {\n  var __ = wp.i18n.__;\n  var _wp$blocks = wp.blocks,\n    registerBlockType = _wp$blocks.registerBlockType,\n    createBlock = _wp$blocks.createBlock;\n  var Fragment = wp.element.Fragment;\n  var _ref = wp.blockEditor || wp.editor,\n    InspectorControls = _ref.InspectorControls,\n    useBlockProps = _ref.useBlockProps; // fallback for older WP\n  var _wp$components = wp.components,\n    PanelBody = _wp$components.PanelBody,\n    ToggleControl = _wp$components.ToggleControl,\n    Disabled = _wp$components.Disabled;\n  var ServerSideRender = wp.serverSideRender && wp.serverSideRender.default || wp.serverSideRender;\n  var addFilter = wp.hooks.addFilter;\n\n  // ---------------------------------------------------------------------------\n  // Icon: translation (simple inline SVG)\n  // ---------------------------------------------------------------------------\n  var TranslationIcon = function TranslationIcon() {\n    return wp.element.createElement('svg', {\n      width: 20,\n      height: 20,\n      viewBox: '0 0 20 20',\n      xmlns: 'http://www.w3.org/2000/svg'\n    }, wp.element.createElement('path', {\n      d: 'M11 7H9.49c-.63 0-1.25.3-1.59.7L7 5H4.13l-2.39 7h1.69l.74-2H7v4H2c-1.1 0-2-.9-2-2V5c0-1.1.9-2 2-2h7c1.1 0 2 .9 2 2v2zM6.51 9H4.49l1-2.93zM10 8h7c1.1 0 2 .9 2 2v7c0 1.1-.9 2-2 2h-7c-1.1 0-2-.9-2-2v-7c0-1.1.9-2 2-2zm7.25 5v-1.08h-3.17V9.75h-1.16v2.17H9.75V13h1.28c.11.85.56 1.85 1.28 2.62-.87.36-1.89.62-2.31.62-.01.02.22.97.2 1.46.84 0 2.21-.5 3.28-1.15 1.09.65 2.48 1.15 3.34 1.15-.02-.49.2-1.44.2-1.46-.43 0-1.49-.27-2.38-.63.7-.77 1.14-1.77 1.25-2.61h1.36zm-3.81 1.93c-.5-.46-.85-1.13-1.01-1.93h2.09c-.17.8-.51 1.47-1 1.93l-.04.03s-.03-.02-.04-.03z'\n    }));\n  };\n\n  // ---------------------------------------------------------------------------\n  // Icon: submenu chevron (used in nav dropdown)\n  // ---------------------------------------------------------------------------\n  var SubmenuChevron = function SubmenuChevron() {\n    return wp.element.createElement('svg', {\n      width: 12,\n      height: 12,\n      viewBox: '0 0 12 12',\n      xmlns: 'http://www.w3.org/2000/svg',\n      fill: 'none'\n    }, wp.element.createElement('path', {\n      d: 'M1.5 4L6 8l4.5-4',\n      strokeWidth: 1.5,\n      stroke: 'currentColor'\n    }));\n  };\n\n  // ---------------------------------------------------------------------------\n  // Shared attributes\n  // ---------------------------------------------------------------------------\n  var sharedAttributes = {\n    dropdown: {\n      type: 'boolean',\n      default: false\n    },\n    show_names: {\n      type: 'boolean',\n      default: true\n    },\n    show_flags: {\n      type: 'boolean',\n      default: false\n    },\n    force_home: {\n      type: 'boolean',\n      default: false\n    },\n    hide_current: {\n      type: 'boolean',\n      default: false\n    },\n    hide_if_no_translation: {\n      type: 'boolean',\n      default: false\n    }\n  };\n\n  // ---------------------------------------------------------------------------\n  // Helper: ensure at least one of show_names/show_flags is true\n  // ---------------------------------------------------------------------------\n  function enforceNamesOrFlags(nextAttrs, currentAttrs) {\n    var result = _objectSpread(_objectSpread({}, currentAttrs), nextAttrs);\n    if (result.show_names === false && result.show_flags === false) {\n      // If the user just turned one off and both are now false, re-enable the other.\n      // Prefer re-enabling the one that did NOT change in this update.\n      if (typeof nextAttrs.show_names !== 'undefined') {\n        result.show_flags = true;\n      } else {\n        result.show_names = true;\n      }\n    }\n    return result;\n  }\n\n  // ---------------------------------------------------------------------------\n  // Reusable inspector panel for both blocks\n  // ---------------------------------------------------------------------------\n  function SwitcherInspector(_ref2) {\n    var attributes = _ref2.attributes,\n      setAttributes = _ref2.setAttributes,\n      _ref2$showHideCurrent = _ref2.showHideCurrentEvenInDropdown,\n      showHideCurrentEvenInDropdown = _ref2$showHideCurrent === void 0 ? false : _ref2$showHideCurrent;\n    var dropdown = attributes.dropdown,\n      show_names = attributes.show_names,\n      show_flags = attributes.show_flags,\n      force_home = attributes.force_home,\n      hide_current = attributes.hide_current,\n      hide_if_no_translation = attributes.hide_if_no_translation;\n    var update = function update(patch) {\n      setAttributes(enforceNamesOrFlags(patch, attributes));\n    };\n    return wp.element.createElement(InspectorControls, {}, wp.element.createElement(PanelBody, {\n      title: __('Language switcher settings', 'linguator')\n    }, wp.element.createElement(ToggleControl, {\n      label: __('Display as dropdown', 'linguator'),\n      checked: !!dropdown,\n      onChange: function onChange(v) {\n        return update({\n          dropdown: !!v\n        });\n      }\n    }), (!dropdown || showHideCurrentEvenInDropdown) && wp.element.createElement(ToggleControl, {\n      label: __('Show language names', 'linguator'),\n      checked: !!show_names,\n      onChange: function onChange(v) {\n        return update({\n          show_names: !!v\n        });\n      }\n    }), (!dropdown || showHideCurrentEvenInDropdown) && wp.element.createElement(ToggleControl, {\n      label: __('Show flags', 'linguator'),\n      checked: !!show_flags,\n      onChange: function onChange(v) {\n        return update({\n          show_flags: !!v\n        });\n      }\n    }), wp.element.createElement(ToggleControl, {\n      label: __('Force switch to homepage', 'linguator'),\n      checked: !!force_home,\n      onChange: function onChange(v) {\n        return update({\n          force_home: !!v\n        });\n      }\n    }), !attributes.dropdown && wp.element.createElement(ToggleControl, {\n      label: __('Hide current language', 'linguator'),\n      checked: !!hide_current,\n      onChange: function onChange(v) {\n        return update({\n          hide_current: !!v\n        });\n      }\n    }), wp.element.createElement(ToggleControl, {\n      label: __('Hide languages without translation', 'linguator'),\n      checked: !!hide_if_no_translation,\n      onChange: function onChange(v) {\n        return update({\n          hide_if_no_translation: !!v\n        });\n      }\n    })));\n  }\n\n  // ---------------------------------------------------------------------------\n  // Regular block: linguator/language-switcher\n  // ---------------------------------------------------------------------------\n  registerBlockType('linguator/language-switcher', {\n    title: __('Language switcher', 'linguator'),\n    description: __('Add a language switcher so visitors can select their preferred language.', 'linguator'),\n    icon: TranslationIcon,\n    category: 'widgets',\n    attributes: _objectSpread({}, sharedAttributes),\n    supports: {\n      html: false\n    },\n    edit: function edit(props) {\n      var blockProps = useBlockProps ? useBlockProps() : {};\n      return wp.element.createElement(Fragment, {}, wp.element.createElement(SwitcherInspector, {\n        attributes: props.attributes,\n        setAttributes: props.setAttributes\n      }), wp.element.createElement(Disabled, {}, ServerSideRender ? wp.element.createElement(ServerSideRender, {\n        block: 'linguator/language-switcher',\n        attributes: props.attributes\n      }) : wp.element.createElement('div', blockProps, __('Language Switcher preview (SSR not available).', 'linguator'))));\n    },\n    save: function save() {\n      return null;\n    } // Rendered via PHP\n  });\n\n  // ---------------------------------------------------------------------------\n  // Navigation child block: linguator/navigation-language-switcher\n  // ---------------------------------------------------------------------------\n  var NAV_BLOCK = 'linguator/navigation-language-switcher';\n  registerBlockType(NAV_BLOCK, {\n    title: __('Language switcher', 'linguator'),\n    description: __('Add a language switcher to the Navigation block.', 'linguator'),\n    icon: TranslationIcon,\n    category: 'widgets',\n    parent: ['core/navigation'],\n    attributes: _objectSpread({}, sharedAttributes),\n    usesContext: ['textColor', 'customTextColor', 'backgroundColor', 'customBackgroundColor', 'overlayTextColor', 'customOverlayTextColor', 'overlayBackgroundColor', 'customOverlayBackgroundColor', 'fontSize', 'customFontSize', 'showSubmenuIcon', 'openSubmenusOnClick', 'style'],\n    transforms: {\n      from: [{\n        type: 'block',\n        blocks: ['core/navigation-link'],\n        transform: function transform() {\n          return createBlock(NAV_BLOCK);\n        }\n      }]\n    },\n    edit: function edit(props) {\n      var attributes = props.attributes,\n        setAttributes = props.setAttributes,\n        context = props.context;\n      var _ref3 = context || {},\n        showSubmenuIcon = _ref3.showSubmenuIcon,\n        openSubmenusOnClick = _ref3.openSubmenusOnClick;\n      var dropdown = attributes.dropdown;\n      var maybeSubmenuIcon = dropdown && (showSubmenuIcon || openSubmenusOnClick) ? wp.element.createElement('span', {\n        className: 'wp-block-navigation__submenu-icon'\n      }, wp.element.createElement(SubmenuChevron)) : null;\n      return wp.element.createElement(Fragment, {}, wp.element.createElement(SwitcherInspector, {\n        attributes: attributes,\n        setAttributes: setAttributes,\n        // In the nav block we allow toggling names/flags even in dropdown for clarity\n        showHideCurrentEvenInDropdown: true\n      }), wp.element.createElement(Disabled, {}, wp.element.createElement('div', {\n        className: 'wp-block-navigation-item'\n      }, ServerSideRender ? wp.element.createElement(ServerSideRender, {\n        block: NAV_BLOCK,\n        attributes: attributes,\n        className: 'wp-block-navigation__container block-editor-block-list__layout'\n      }) : wp.element.createElement('div', {}, __('Language Switcher (Navigation) preview (SSR not available).', 'linguator')), maybeSubmenuIcon)));\n    },\n    save: function save() {\n      return null;\n    } // Rendered via PHP\n  });\n\n  // ---------------------------------------------------------------------------\n  // Classic Menu → Navigation conversion hook\n  // Replaces a menu item with URL \"#lmat_switcher\" by our NAV_BLOCK with options from meta._lmat_menu_item\n  // WARNING: relies on an unstable filter that may change across WP versions.\n  // ---------------------------------------------------------------------------\n  function mapBlockTree(blocks, menuItems, blocksMapping, mapper) {\n    var _convert = function convert(block) {\n      var replaced = mapper(block, menuItems, blocksMapping);\n      var innerBlocks = (replaced.innerBlocks || []).map(function (b) {\n        return _convert(b);\n      });\n      return _objectSpread(_objectSpread({}, replaced), {}, {\n        innerBlocks: innerBlocks\n      });\n    };\n    return blocks.map(_convert);\n  }\n  function blocksFilter(block, menuItems, blocksMapping) {\n    if (block.name === 'core/navigation-link' && block.attributes && block.attributes.url === '#lmat_switcher') {\n      var menuItem = (menuItems || []).find(function (m) {\n        return m && m.url === '#lmat_switcher';\n      });\n      var attrs = menuItem && menuItem.meta && menuItem.meta._lmat_menu_item || {};\n      var newBlock = createBlock(NAV_BLOCK, attrs);\n      if (menuItem && typeof menuItem.id !== 'undefined') {\n        blocksMapping[menuItem.id] = newBlock.clientId;\n      }\n      return newBlock;\n    }\n    return block;\n  }\n  function menuItemsToBlocksFilter(blocks, menuItems) {\n    return _objectSpread(_objectSpread({}, blocks), {}, {\n      innerBlocks: mapBlockTree(blocks.innerBlocks || [], menuItems || [], blocks.mapping || {}, blocksFilter)\n    });\n  }\n  addFilter('blocks.navigation.__unstableMenuItemsToBlocks', 'linguator/include-language-switcher', menuItemsToBlocksFilter);\n})();\n\n//# sourceURL=webpack://linguator-multilingual-ai-translation/./Assets/js/src/blocks.js?\n}")}},__webpack_require__={r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},__webpack_exports__={};__webpack_modules__["./Assets/js/src/blocks.js"](0,__webpack_exports__,__webpack_require__)})();