{"version":3,"file":"index.js","mappings":"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","sources":["webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/AllowedMetafileds.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/FetchPost/Elementor/index.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/FetchPost/Gutenberg/index.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/component/CopyClipboard/index.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/component/ErrorModalBox/index.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/component/FilterNestedAttr/index.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/component/FilterTargetContent/index.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/component/FormateNumberCount/index.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/component/Notice/index.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/component/ProgressBar/index.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/component/ProgressBar/showStringCount.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/component/StoreTimeTaken/index.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/component/TranslateProvider/google/google-language.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/component/TranslateProvider/google/index.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/component/TranslateProvider/index.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/component/TranslateSeoFields/RankMathSeo.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/component/TranslateSeoFields/SeoPress.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/component/TranslateSeoFields/YoastSeoFields.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/component/storeTranslatedString/index.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/component/stringModalScroll/index.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/createTranslatedPost/Elementor/index.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/createTranslatedPost/Gutenberg/createBlock.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/createTranslatedPost/Gutenberg/index.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/global-store/actions.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/global-store/index.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/global-store/reducer.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/global-store/selectors.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/global-store/types.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/helper/index.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/index.css?8580","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/popupSettingModal/body.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/popupSettingModal/footer.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/popupSettingModal/header.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/popupSettingModal/index.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/popupSettingModal/providers.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/popupStringModal/body.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/popupStringModal/footer.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/popupStringModal/header.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/popupStringModal/index.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/popupStringModal/notice.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/storeSourceString/Elementor/index.js","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/storeSourceString/Gutenberg/index.js","webpack://linguator-multilingual-ai-translation/./node_modules/react-dom/client.js","webpack://linguator-multilingual-ai-translation/external window [\"wp\",\"blocks\"]","webpack://linguator-multilingual-ai-translation/external window [\"wp\",\"data\"]","webpack://linguator-multilingual-ai-translation/external window [\"wp\",\"element\"]","webpack://linguator-multilingual-ai-translation/external window [\"wp\",\"i18n\"]","webpack://linguator-multilingual-ai-translation/external window \"React\"","webpack://linguator-multilingual-ai-translation/external window \"ReactDOM\"","webpack://linguator-multilingual-ai-translation/external window \"ReactJSXRuntime\"","webpack://linguator-multilingual-ai-translation/webpack/bootstrap","webpack://linguator-multilingual-ai-translation/webpack/runtime/define property getters","webpack://linguator-multilingual-ai-translation/webpack/runtime/hasOwnProperty shorthand","webpack://linguator-multilingual-ai-translation/webpack/runtime/make namespace object","webpack://linguator-multilingual-ai-translation/./modules/page-translation/src/index.js"],"sourcesContent":["const AllowedMetaFields={\r\n    '_yoast_wpseo_title': {type: 'string'},\r\n    '_yoast_wpseo_focuskw': {type: 'string'},\r\n    '_yoast_wpseo_metadesc': {type: 'string'},\r\n    '_yoast_wpseo_bctitle': {type: 'string'},\r\n    '_yoast_wpseo_opengraph-title': {type: 'string'},\r\n    '_yoast_wpseo_opengraph-description': {type: 'string'},\r\n    '_yoast_wpseo_twitter-title': {type: 'string'},\r\n    '_yoast_wpseo_twitter-description': {type: 'string'},\r\n    'rank_math_title': {type: 'string'},\r\n    'rank_math_description': {type: 'string'},\r\n    'rank_math_focus_keyword': {type: 'string'},\r\n    'rank_math_facebook_title': {type: 'string'},\r\n    'rank_math_facebook_description': {type: 'string'},\r\n    'rank_math_twitter_title': {type: 'string'},\r\n    'rank_math_twitter_description': {type: 'string'},\r\n    'rank_math_breadcrumb_title': {type: 'string'},\r\n    '_seopress_titles_title': {type: 'string'},\r\n    '_seopress_titles_desc': {type: 'string'},\r\n    '_seopress_social_fb_title': {type: 'string'},\r\n    '_seopress_social_fb_desc': {type: 'string'},\r\n    '_seopress_social_twitter_title': {type: 'string'},\r\n    '_seopress_social_twitter_desc': {type: 'string'},\r\n    '_seopress_analysis_target_kw': {type: 'string'}\r\n};\r\n\r\nexport default AllowedMetaFields;","import { dispatch } from \"@wordpress/data\";\r\nimport AllowedMetaFields from \"../../AllowedMetafileds.js\";\r\nimport ElementorSaveSource from \"../../storeSourceString/Elementor/index.js\";\r\n\r\n// Update allowed meta fields\r\nconst updateAllowedMetaFields = (data) => {\r\n    dispatch('block-lmatMachineTranslate/translate').allowedMetaFields(data);\r\n}\r\n\r\nconst fetchPostContent = async (props) => {\r\n    const elementorPostData = lmatPageTranslationGlobal.elementorData && typeof lmatPageTranslationGlobal.elementorData === 'string' ? JSON.parse(lmatPageTranslationGlobal.elementorData) : lmatPageTranslationGlobal.elementorData;\r\n    const metaFields=lmatPageTranslationGlobal?.metaFields;\r\n\r\n    const content={\r\n        widgetsContent:elementorPostData,\r\n        metaFields:metaFields\r\n    }\r\n\r\n    \r\n    // Update allowed meta fields\r\n    Object.keys(AllowedMetaFields).forEach(key => {\r\n        updateAllowedMetaFields({id: key, type: AllowedMetaFields[key].type});\r\n    });\r\n    \r\n    ElementorSaveSource(content);\r\n    \r\n    props.refPostData(content);\r\n    props.updatePostDataFetch(true);\r\n}\r\n\r\nexport default fetchPostContent;","import GutenbergBlockSaveSource from \"../../storeSourceString/Gutenberg/index.js\";\r\nimport { dispatch } from \"@wordpress/data\";\r\nimport { parse } from \"@wordpress/blocks\";\r\nimport { __ } from \"@wordpress/i18n\";\r\n\r\nimport AllowedMetaFields from \"../../AllowedMetafileds.js\";\r\n\r\nconst GutenbergPostFetch = async (props) => {\r\n    const apiUrl = lmatPageTranslationGlobal.ajax_url;\r\n    let blockRules = {};\r\n\r\n    // Update allowed meta fields\r\n    const updateAllowedMetaFields = (data) => {\r\n        dispatch('block-lmatMachineTranslate/translate').allowedMetaFields(data);\r\n    }\r\n\r\n    // Update ACF fields allowed meta fields\r\n    const AcfFields = () =>{\r\n        const postMetaSync = lmatPageTranslationGlobal.postMetaSync === 'true';\r\n\r\n        if(window.acf && !postMetaSync){\r\n            const allowedTypes = ['text', 'textarea', 'wysiwyg'];\r\n            acf.getFields().forEach(field => {\r\n                if(field.data && allowedTypes.includes(field.data.type)){\r\n                    updateAllowedMetaFields({id: field.data.key, type: field.data.type});\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // Update allowed meta fields\r\n    Object.keys(AllowedMetaFields).forEach(key => {\r\n        updateAllowedMetaFields({id: key, type: AllowedMetaFields[key].type});\r\n    });\r\n\r\n    // Update ACF fields allowed meta fields\r\n    AcfFields();\r\n\r\n    const blockRulesApiSendData = {\r\n        lmat_fetch_block_rules_key: lmatPageTranslationGlobal.fetchBlockRulesNonce,\r\n        action: lmatPageTranslationGlobal.action_block_rules\r\n    };\r\n\r\n    await fetch(apiUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n            'Accept': 'application/json',\r\n        },\r\n        body: new URLSearchParams(blockRulesApiSendData)\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            blockRules = JSON.parse(data.data.blockRules);\r\n            dispatch('block-lmatMachineTranslate/translate').setBlockRules(blockRules);\r\n\r\n        })\r\n        .catch(error => {\r\n            console.error('Error fetching post content:', error);\r\n        });\r\n\r\n\r\n\r\n    /**\r\n     * Prepare data to send in API request.\r\n     */\r\n    const apiSendData = {\r\n        postId: parseInt(props.postId),\r\n        local: props.targetLang,\r\n        current_local: props.sourceLang,\r\n        lmat_page_translation_nonce: lmatPageTranslationGlobal.ajax_nonce,\r\n        action: lmatPageTranslationGlobal.action_fetch\r\n    };\r\n\r\n    /**\r\n     * useEffect hook to fetch post data from the specified API endpoint.\r\n     * Parses the response data and updates the state accordingly.\r\n     * Handles errors in fetching post content.\r\n     */\r\n    // useEffect(() => {\r\n    await fetch(apiUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n            'Accept': 'application/json',\r\n        },\r\n        body: new URLSearchParams(apiSendData)\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n\r\n            const post_data = data.data;\r\n\r\n            if (post_data.content && post_data.content.trim() !== '') {\r\n                post_data.content = parse(post_data.content);\r\n            }\r\n\r\n            GutenbergBlockSaveSource(post_data, blockRules);\r\n            props.refPostData(post_data);\r\n            props.updatePostDataFetch(true);\r\n        })\r\n        .catch(error => {\r\n            console.error('Error fetching post content:', error);\r\n        });\r\n};\r\n\r\nexport default GutenbergPostFetch;","const CopyClipboard = async ({ text = false, startCopyStatus = () => {}, endCopyStatus = () => {} }) => {\r\n    if (!text || text === \"\") return;\r\n\r\n    try {\r\n      if (navigator?.clipboard?.writeText) {\r\n        await navigator.clipboard.writeText(text);\r\n      } else {\r\n        // Fallback method if Clipboard API is not supported\r\n        const textArea = document.createElement('textarea');\r\n        textArea.value = text;\r\n        document.body.appendChild(textArea);\r\n        textArea.select();\r\n        if (document.execCommand) {\r\n          document.execCommand('copy');\r\n        }\r\n        document.body.removeChild(textArea);\r\n      }\r\n\r\n      startCopyStatus();\r\n      setTimeout(() => endCopyStatus(), 800); // Reset to \"Copy\" after 2 seconds\r\n    } catch (err) {\r\n      console.error('Error copying text to clipboard:', err);\r\n    }\r\n};\r\n\r\nexport default CopyClipboard;\r\n","import CopyClipboard from \"../CopyClipboard/index.js\";\r\nimport { useEffect } from \"@wordpress/element\";\r\n\r\nconst ErrorModalBox = ({ message, onClose, Title }) => {\r\n\r\n    let dummyElement = jQuery('<div>').append(message);\r\n    const stringifiedMessage = dummyElement.html();\r\n    dummyElement.remove();\r\n    dummyElement = null;\r\n\r\n    useEffect(() => {\r\n        const clipboardElements = document.querySelectorAll('.chrome-ai-translator-flags');\r\n\r\n        if (clipboardElements.length > 0) {\r\n            clipboardElements.forEach(element => {\r\n\r\n                element.classList.add('lmat-page-translation-tooltip-element');\r\n\r\n                element.addEventListener('click', (e) => {\r\n                    e.preventDefault();\r\n                    const toolTipExists = element.querySelector('.lmat-page-translation-tooltip');\r\n                    \r\n                    if(toolTipExists){\r\n                        return;\r\n                    }\r\n\r\n                    let toolTipElement = document.createElement('span');\r\n                    toolTipElement.textContent = \"Text to be copied.\";\r\n                    toolTipElement.className = 'lmat-page-translation-tooltip';\r\n                    element.appendChild(toolTipElement);\r\n\r\n                    CopyClipboard({ text: element.getAttribute('data-clipboard-text'), startCopyStatus: () => {\r\n                        toolTipElement.classList.add('lmat-page-translation-tooltip-active');\r\n                    }, endCopyStatus: () => {\r\n                        setTimeout(() => {\r\n                            toolTipElement.remove();\r\n                        }, 800);\r\n                    } });\r\n                });\r\n            });\r\n\r\n            return () => {\r\n                clipboardElements.forEach(element => {\r\n                    element.removeEventListener('click', () => { });\r\n                });\r\n            };\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"lmat-page-translation-error-modal-box-container\">\r\n            <div className=\"lmat-page-translation-error-modal-box\">\r\n                <div className=\"lmat-page-translation-error-modal-box-header\">\r\n                    <span className=\"lmat-page-translation-error-modal-box-close\" onClick={onClose}>×</span>\r\n                    {Title && <h3>{Title}</h3>}\r\n                </div>\r\n                <div className=\"lmat-page-translation-error-modal-box-body\">\r\n                    <p dangerouslySetInnerHTML={{ __html: stringifiedMessage }} />\r\n                </div>\r\n                <div className=\"lmat-page-translation-error-modal-box-footer\">\r\n                    <button className=\"lmat-page-translation-error-modal-box-close button button-primary\" onClick={onClose}>Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorModalBox;\r\n","const FilterBlockNestedAttr = (idsArr, attrObj, blockAttr, callBack) => {\r\n    /**\r\n     * Iterates over the keys of the filter object and calls saveTranslatedAttr for each key.\r\n     * \r\n     * @param {Array} idArr - The array of IDs.\r\n     * @param {Object} filterObj - The filter object to iterate over.\r\n     */\r\n    const childAttr = (idArr, filterObj) => {\r\n        Object.keys(filterObj).map(key => {\r\n            let filterObjType = filterObj;\r\n            filterObjType = filterObjType[key];\r\n            const newIdArr = new Array(...idArr, key);\r\n\r\n            callBack(newIdArr, filterObjType);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handles the attributes that are arrays and objects by recursively calling saveTranslatedAttr.\r\n     * \r\n     * @param {Array} idArr - The array of IDs.\r\n     * @param {Array} attrFilter - The filter attribute array.\r\n     */\r\n    const childAttrArray = (idArr, attrFilter) => {\r\n\r\n        const newIdArr = new Array(...idArr);\r\n        let dynamicBlockAttr = blockAttr;\r\n\r\n        newIdArr.forEach(key => {\r\n            dynamicBlockAttr = dynamicBlockAttr[key];\r\n        });\r\n\r\n        if([null, undefined].includes(dynamicBlockAttr)) {\r\n            return;\r\n        }\r\n\r\n        if (Object.getPrototypeOf(dynamicBlockAttr) === Object.prototype) {\r\n            childAttr(idArr, attrFilter[0]);\r\n            return;\r\n        }\r\n        \r\n        if (Object.getPrototypeOf(dynamicBlockAttr) === Array.prototype) {\r\n            dynamicBlockAttr.forEach((_, index) => {\r\n                const nestedId = new Array();\r\n                newIdArr.forEach(key => {\r\n                    nestedId.push(key);\r\n                });\r\n                \r\n                nestedId.push(index);\r\n                callBack(nestedId, attrFilter[0]);\r\n            });\r\n        }\r\n\r\n        if (typeof dynamicBlockAttr === 'object') {\r\n            childAttr(idArr, attrFilter[0]);\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n    const typeCheck = () => {\r\n        if (Object.getPrototypeOf(attrObj) === Array.prototype) {\r\n            childAttrArray(idsArr, attrObj);\r\n        } else if (Object.getPrototypeOf(attrObj) === Object.prototype) {\r\n            childAttr(idsArr, attrObj);\r\n        }\r\n    }\r\n\r\n    typeCheck();\r\n}\r\n\r\nexport default FilterBlockNestedAttr;","const FilterTargetContent = (props) => {\r\n    const skipTags=props.skipTags || [];\r\n\r\n    function fixHtmlTags(content) {\r\n        if (typeof content !== 'string' || !content.trim()) return content;\r\n    \r\n        const tagRegex = /<\\/?([a-zA-Z0-9]+)(\\s[^>]*)?>/g;\r\n        const stack = [];\r\n        let result = '';\r\n        let lastIndex = 0;\r\n        let match;\r\n    \r\n        while ((match = tagRegex.exec(content)) !== null) {\r\n            const [fullMatch, tagName] = match;\r\n            const isClosingTag = fullMatch.startsWith('</');\r\n            const currentIndex = match.index;\r\n    \r\n            // Append content before this tag\r\n            if (currentIndex > lastIndex) {\r\n                result += content.slice(lastIndex, currentIndex);\r\n            }\r\n    \r\n            if (!isClosingTag) {\r\n                // Opening tag: push to stack\r\n                stack.push({ tag: tagName });\r\n                result += fullMatch;\r\n            } else {\r\n                // Closing tag\r\n                const openIndex = stack.findIndex(t => t.tag === tagName);\r\n                if (openIndex !== -1) {\r\n                    // Match found: remove opening from stack\r\n                    stack.splice(openIndex, 1);\r\n                    result += fullMatch;\r\n                } else {\r\n                    // No opening tag: insert missing opening tag before closing\r\n                    result += `#lmat_page_translation_temp_tag_open#<${tagName}>#lmat_page_translation_temp_tag_close#` + fullMatch;\r\n                }\r\n            }\r\n    \r\n            lastIndex = tagRegex.lastIndex;\r\n        }\r\n    \r\n        // Append any remaining content after last tag\r\n        if (lastIndex < content.length) {\r\n            result += content.slice(lastIndex);\r\n        }\r\n    \r\n        // Add missing closing tags at the end\r\n        for (let i = stack.length - 1; i >= 0; i--) {\r\n            const { tag } = stack[i];\r\n            result += `#lmat_page_translation_temp_tag_open#</${tag}>#lmat_page_translation_temp_tag_close#`;\r\n        }\r\n    \r\n        // Clear references to free memory (optional in GC-based engines, but helpful)\r\n        match = null;\r\n        stack.length = 0;\r\n        content = null;\r\n    \r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Wraps the first element and its matching closing tag with translation spans.\r\n     * If no elements are found, returns the original HTML.\r\n     * @param {string} html - The HTML string to process.\r\n     * @returns {string} The modified HTML string with wrapped translation spans.\r\n     */\r\n    const wrapFirstAndMatchingClosingTag = (html) => {\r\n        // Create a temporary element to parse the HTML string\r\n        const tempElement = document.createElement('div');\r\n        tempElement.innerHTML = html;\r\n\r\n        // Get the first element\r\n        const firstElement = tempElement.firstElementChild;\r\n\r\n        if (!firstElement) {\r\n            return html; // If no elements, return the original HTML\r\n        }\r\n\r\n\r\n        let childNodes = firstElement.childNodes;\r\n        let childNodesLength = childNodes.length;\r\n        if (childNodesLength > 0) {\r\n            // Sort so that nodeType 3 (Text nodes) come first\r\n            childNodes = Array.from(childNodes).sort((a, b) => (a.nodeType === 3 ? -1 : b.nodeType === 3 ? 1 : 0));\r\n            for (let i = 0; i < childNodesLength; i++) {\r\n                let element = childNodes[i];\r\n\r\n                if(element.nodeType === 3){\r\n                    let textContent = element.textContent.replace(/^\\s+|^\\.\\s+|^\\s.|\\s+$|\\.\\s+$|\\s.\\+$/g, (match) => `#lmat_page_translation_open_translate_span#${match}#lmat_page_translation_close_translate_span#`);\r\n\r\n                    element.textContent = textContent;\r\n                }\r\n                else if(element.nodeType === 8){\r\n                    let textContent = `<!--${element.textContent}-->`;\r\n                    element.textContent = textContent;\r\n                }\r\n                else{\r\n                    let filterContent = wrapFirstAndMatchingClosingTag(element.outerHTML);\r\n                    element.outerHTML = filterContent;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Get the opening tag of the first element\r\n        // const firstElementOpeningTag = firstElement.outerHTML.match(/^<[^>]+>/)[0];\r\n        let firstElementOpeningTag = firstElement.outerHTML.match(/^<[^>]+>/)[0];\r\n        firstElementOpeningTag = firstElementOpeningTag.replace(/#lmat_page_translation_open_translate_span#|#lmat_page_translation_close_translate_span#/g, '');\r\n\r\n        // Check if the first element has a corresponding closing tag\r\n        const openTagName = firstElement.tagName.toLowerCase();\r\n        const closingTagName = new RegExp(`<\\/${openTagName}>`, 'i');\r\n\r\n        // Check if the inner HTML contains the corresponding closing tag\r\n        const closingTagMatch = firstElement.outerHTML.match(closingTagName);\r\n\r\n        // Wrap the style element\r\n        if (firstElementOpeningTag === '<style>') {\r\n            let wrappedFirstTag = `#lmat_page_translation_open_translate_span#${firstElement.outerHTML}#lmat_page_translation_close_translate_span#`;\r\n            return wrappedFirstTag;\r\n        }\r\n\r\n        let firstElementHtml = firstElement.innerHTML;\r\n\r\n        firstElementHtml = firstElementHtml.replace(/^\\s+|^\\.\\s+|^\\s.|\\s+$|\\.\\s+$|\\s.\\+$/g, (match) => `#lmat_page_translation_open_translate_span#${match}#lmat_page_translation_close_translate_span#`);\r\n\r\n        firstElement.innerHTML = '';\r\n        let closeTag = '';\r\n        let openTag='';\r\n        let filterContent = '';\r\n\r\n        openTag = `#lmat_page_translation_open_translate_span#${firstElementOpeningTag}#lmat_page_translation_close_translate_span#`;\r\n        if (closingTagMatch) {\r\n            closeTag = `#lmat_page_translation_open_translate_span#</${openTagName}>#lmat_page_translation_close_translate_span#`;\r\n        }\r\n\r\n        if(skipTags.includes(openTagName)){\r\n            // Remove the custom span markers from the HTML if the tag is in skipTags\r\n            firstElementHtml = firstElementHtml.replace(/#lmat_page_translation_open_translate_span#|#lmat_page_translation_close_translate_span#/g, '');\r\n            firstElementHtml = \"#lmat_page_translation_open_translate_span#\"+firstElementHtml+\"#lmat_page_translation_close_translate_span#\";\r\n        }\r\n\r\n        if ('' !== firstElementHtml) {\r\n            if ('' !== openTag) {\r\n                filterContent = openTag + firstElementHtml;\r\n            }\r\n            if ('' !== closeTag) {\r\n                filterContent += closeTag;\r\n            }\r\n        } else {\r\n            filterContent = openTag + closeTag;\r\n        }\r\n\r\n        firstElement.outerHTML = filterContent;\r\n\r\n        // Return the modified HTML\r\n        return tempElement.innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Splits the content string based on a specific pattern.\r\n     * @param {string} string - The content string to split.\r\n     * @returns {Array} An array of strings after splitting based on the pattern.\r\n     */\r\n    const splitContent = (string) => {\r\n        const pattern = /(#lmat_page_translation_open_translate_span#.*?#lmat_page_translation_close_translate_span#)|'/;\r\n        const matches = string.split(pattern).filter(Boolean);\r\n\r\n        // Remove empty strings from the result\r\n        const output = matches.filter(match => match.trim() !== '');\r\n\r\n        return output;\r\n    }\r\n\r\n    /**\r\n     * Filters the SEO content.\r\n     * @param {string} content - The SEO content to filter.\r\n     * @returns {string} The filtered SEO content.\r\n     */\r\n    const filterSeoContent = (content) => {\r\n        const regex = /(%{1,2}[a-zA-Z0-9_]+%{0,2})/g;\r\n\r\n        // Replace placeholders with wrapped spans\r\n        const output = content.replace(regex, (match) => {\r\n            return `#lmat_page_translation_open_translate_span#${match}#lmat_page_translation_close_translate_span#`;\r\n        });\r\n\r\n        return output;\r\n    }\r\n\r\n    /**\r\n     * Replaces the inner text of HTML elements with span elements for translation.\r\n     * @param {string} string - The HTML content string to process.\r\n     * @returns {Array} An array of strings after splitting based on the pattern.\r\n     */\r\n    const filterSourceData = (string) => {\r\n\r\n        const isSeoContent = /^(_yoast_wpseo_|rank_math_|_seopress_)/.test(props.contentKey.trim());\r\n        if (isSeoContent) {\r\n            string= filterSeoContent(string);\r\n        }\r\n\r\n        // Filter shortcode content\r\n        const shortcodePattern = /\\[(.*?)\\]/g;\r\n        const shortcodeMatches = string.match(shortcodePattern);\r\n\r\n        if (shortcodeMatches) {\r\n            string = string.replace(shortcodePattern, (match) => `#lmat_page_translation_open_translate_span#${match}#lmat_page_translation_close_translate_span#`);\r\n        }\r\n\r\n        function replaceInnerTextWithSpan(doc) {\r\n            let childElements = doc.childNodes;\r\n            \r\n            const childElementsReplace = (index) => {\r\n                if (childElements.length > index) {\r\n                    let element = childElements[index];\r\n                    let textNode=null;\r\n\r\n                    if(element.nodeType === 3){\r\n                        const textContent = element.textContent.replace(/^\\s+|^\\.\\s+|^\\s.|\\s+$|\\.\\s+$|\\s.\\+$/g, (match) => `#lmat_page_translation_open_translate_span#${match}#lmat_page_translation_close_translate_span#`);\r\n\r\n                        textNode = document.createTextNode(textContent);\r\n                    }else if(element.nodeType === 8){\r\n                        textNode = document.createTextNode(`<!--${element.textContent}-->`);\r\n                    }else{\r\n                        let filterContent = wrapFirstAndMatchingClosingTag(element.outerHTML);\r\n\r\n                        textNode = document.createTextNode(filterContent);\r\n                    }\r\n                    \r\n                    element.replaceWith(textNode);\r\n                    \r\n                    index++;\r\n                    childElementsReplace(index);\r\n                }\r\n            }\r\n            \r\n            childElementsReplace(0);\r\n            return doc;\r\n        }\r\n\r\n\r\n\r\n        const tempElement = document.createElement('div');\r\n        tempElement.innerHTML = fixHtmlTags(string);\r\n        replaceInnerTextWithSpan(tempElement);\r\n\r\n        let content = tempElement.innerText;\r\n\r\n        // remoove all the #lmat_page_translation_temp_tag_open# and #lmat_page_translation_open_translate_span#\r\n        content = content.replace(/#lmat_page_translation_temp_tag_open#([\\s\\S]*?)#lmat_page_translation_temp_tag_close#/g, '');\r\n\r\n        return splitContent(content);\r\n    }\r\n\r\n    /**\r\n     * The content to be filtered based on the service type.\r\n     * If the service is 'yandex', the content is filtered using filterSourceData function, otherwise, the content remains unchanged.\r\n     */\r\n    const content = ['yandex', 'localAiTranslator', 'google'].includes(props.service) ? filterSourceData(props.content) : props.content;\r\n\r\n    /**\r\n     * Regular expression pattern to match the span elements that should not be translated.\r\n     */\r\n    const notTranslatePattern = /#lmat_page_translation_open_translate_span#[\\s\\S]*?#lmat_page_translation_close_translate_span#/;\r\n\r\n    /**\r\n     * Regular expression pattern to replace the placeholder span elements.\r\n     */\r\n    const replacePlaceholderPattern = /#lmat_page_translation_open_translate_span#|#lmat_page_translation_close_translate_span#/g;\r\n\r\n    const filterContent = content => {\r\n        const updatedContent = content.replace(replacePlaceholderPattern, '');\r\n        return updatedContent;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {['yandex', 'localAiTranslator', 'google'].includes(props.service) ?\r\n                content.map((data, index) => {\r\n                    const notTranslate = notTranslatePattern.test(data);\r\n                    if (notTranslate) {\r\n                        return <span key={index} className=\"notranslate lmat-page-translation-notraslate-tag\" translate=\"no\">{filterContent(data)}</span>;\r\n                    } else {\r\n                        return data;\r\n                    }\r\n                })\r\n                : content}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FilterTargetContent;","const FormatNumberCount = ({number}) => {\r\n    if (number >= 1000000) {\r\n        return (number / 1000000).toFixed(1) + 'M';\r\n    } else if (number >= 1000) {\r\n        return (number / 1000).toFixed(1) + 'K';\r\n    }\r\n    return number;\r\n};\r\n\r\nexport default FormatNumberCount;","import { useEffect } from 'react';\r\n\r\nconst Notice = (props) => {\r\n\r\n    const updateNoticeWrapperHeight = () => {\r\n        const parentNoticeWrapper = document.querySelector('.lmat-page-translation-body-notice-wrapper');\r\n        if(parentNoticeWrapper){\r\n            const height= parentNoticeWrapper.offsetHeight + parentNoticeWrapper.offsetTop;\r\n\r\n            parentNoticeWrapper.closest('.modal-body').style.setProperty('--lmat-page-translation-notice-wrapper-height', `${height}px`);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(props.lastNotice){\r\n            updateNoticeWrapperHeight();\r\n            window.addEventListener('resize', updateNoticeWrapperHeight);\r\n        }\r\n        \r\n        return () => {\r\n            window.removeEventListener('resize', updateNoticeWrapperHeight);\r\n        }\r\n\r\n    }, [props.lastNotice]);\r\n\r\n    return (\r\n        <div className={props.className}>{props.children}</div>\r\n    );\r\n};\r\n\r\nexport default Notice;\r\n","/**\r\n * Adds a progress bar to the container.\r\n * \r\n * @param {HTMLElement} container - The container element for translation.\r\n */\r\nconst AddProgressBar = (provider) => {\r\n\r\n    const progressBarSelector = \"#lmat_page_translation_strings_model .lmat_page_translation_translate_progress\";\r\n\r\n    if (!document.querySelector(`#lmat-page-translation-${provider}-progress-bar`)) {\r\n        const progressBar = jQuery(`\r\n            <div id=\"lmat-page-translation-${provider}-progress-bar\" class=\"lmat-page-translation-translate-progress-bar\">\r\n                <div class=\"${provider}-translator_progress_bar\" style=\"background-color: #f3f3f3;border-radius: 10px;overflow: hidden;margin: 1.5rem auto; width: 50%;\">\r\n                <div class=\"${provider}-translator_progress\" style=\"overflow: hidden;transition: width .2s ease-in-out; border-radius: 10px;text-align: center;width: 0%;height: 20px;box-sizing: border-box;background-color: #4caf50; color: #fff; font-weight: 600;\"></div>\r\n                </div>\r\n                <div style=\"display:none; color: white;\" class=\"${provider}-translator-strings-count hidden\">\r\n                    Wahooo! You have saved your valuable time via auto translating \r\n                    <strong class=\"totalChars\"></strong> characters using \r\n                    <strong>\r\n                        ${provider} Translator\r\n                    </strong>\r\n                </div>\r\n            </div>\r\n        `);\r\n        jQuery(progressBarSelector).append(progressBar); // Append the progress bar to the specified selector\r\n    }else{\r\n        jQuery(`.${provider}-translator_progress`).css('width', '0%');\r\n        jQuery(`.${provider}-translator-strings-count`).hide();\r\n    }\r\n}\r\n\r\nexport default AddProgressBar;","import { select } from '@wordpress/data';\r\nimport FormatNumberCount from \"../FormateNumberCount/index.js\";\r\n\r\nconst ShowStringCount = (provider, status='none', characterCount=false) => {\r\n\r\n    if(false ===characterCount){\r\n        characterCount = select('block-lmatMachineTranslate/translate').getTranslationInfo().sourceCharacterCount;\r\n    }\r\n\r\n    const stringCount = document.querySelector(`.${provider}-translator-strings-count`);\r\n    if(stringCount){\r\n        stringCount.style.display = status;\r\n        stringCount.querySelector('.totalChars').textContent = FormatNumberCount({number: characterCount});\r\n    }\r\n}\r\n\r\nexport default ShowStringCount;\r\n","import { select, dispatch } from \"@wordpress/data\";\r\n\r\nconst StoreTimeTaken = ({ prefix = false, start = false, end = false, translateStatus = false }) => {\r\n\r\n    const timeTaken = (end - start) / 1000; // Convert milliseconds to seconds\r\n    const data = {};\r\n\r\n    if (prefix) {\r\n        data.provider = prefix;\r\n        if (start && end) {\r\n            const oldTimeTaken = select('block-lmatMachineTranslate/translate').getTranslationInfo().translateData[prefix]?.timeTaken || 0;\r\n            data.timeTaken = timeTaken + oldTimeTaken;\r\n        }\r\n\r\n        if (translateStatus) {\r\n            data.translateStatus = true;\r\n        }\r\n\r\n        dispatch('block-lmatMachineTranslate/translate').translationInfo(data);\r\n    }\r\n}\r\n\r\nexport default StoreTimeTaken;","export default () => {\r\n    const languages = [\r\n        \"ab\",\r\n        \"ace\",\r\n        \"ach\",\r\n        \"aa\",\r\n        \"af\",\r\n        \"sq\",\r\n        \"alz\",\r\n        \"am\",\r\n        \"ar\",\r\n        \"hy\",\r\n        \"as\",\r\n        \"av\",\r\n        \"awa\",\r\n        \"ay\",\r\n        \"az\",\r\n        \"ban\",\r\n        \"bal\",\r\n        \"bm\",\r\n        \"bci\",\r\n        \"ba\",\r\n        \"eu\",\r\n        \"btx\",\r\n        \"bts\",\r\n        \"bbc\",\r\n        \"be\",\r\n        \"bem\",\r\n        \"bn\",\r\n        \"bew\",\r\n        \"bho\",\r\n        \"bik\",\r\n        \"bs\",\r\n        \"br\",\r\n        \"bg\",\r\n        \"bua\",\r\n        \"yue\",\r\n        \"ca\",\r\n        \"ceb\",\r\n        \"ch\",\r\n        \"ce\",\r\n        \"ny\",\r\n        \"zh-CN\",\r\n        \"zh-TW\",\r\n        \"chk\",\r\n        \"cv\",\r\n        \"co\",\r\n        \"crh\",\r\n        \"crh-Latn\",\r\n        \"hr\",\r\n        \"cs\",\r\n        \"da\",\r\n        \"fa-AF\",\r\n        \"dv\",\r\n        \"din\",\r\n        \"doi\",\r\n        \"dov\",\r\n        \"nl\",\r\n        \"dyu\",\r\n        \"dz\",\r\n        \"en\",\r\n        \"eo\",\r\n        \"et\",\r\n        \"ee\",\r\n        \"fo\",\r\n        \"fj\",\r\n        \"tl\",\r\n        \"fi\",\r\n        \"fon\",\r\n        \"fr\",\r\n        \"fr-CA\",\r\n        \"fy\",\r\n        \"fur\",\r\n        \"ff\",\r\n        \"gaa\",\r\n        \"gl\",\r\n        \"ka\",\r\n        \"de\",\r\n        \"el\",\r\n        \"gn\",\r\n        \"gu\",\r\n        \"ht\",\r\n        \"cnh\",\r\n        \"ha\",\r\n        \"haw\",\r\n        \"iw\",\r\n        \"hil\",\r\n        \"hi\",\r\n        \"hmn\",\r\n        \"hu\",\r\n        \"hrx\",\r\n        \"iba\",\r\n        \"is\",\r\n        \"ig\",\r\n        \"ilo\",\r\n        \"id\",\r\n        \"iu-Latn\",\r\n        \"iu\",\r\n        \"ga\",\r\n        \"it\",\r\n        \"jam\",\r\n        \"ja\",\r\n        \"jw\",\r\n        \"kac\",\r\n        \"kl\",\r\n        \"kn\",\r\n        \"kr\",\r\n        \"pam\",\r\n        \"kk\",\r\n        \"kha\",\r\n        \"km\",\r\n        \"cgg\",\r\n        \"kg\",\r\n        \"rw\",\r\n        \"ktu\",\r\n        \"trp\",\r\n        \"kv\",\r\n        \"gom\",\r\n        \"ko\",\r\n        \"kri\",\r\n        \"ku\",\r\n        \"ckb\",\r\n        \"ky\",\r\n        \"lo\",\r\n        \"ltg\",\r\n        \"la\",\r\n        \"lv\",\r\n        \"lij\",\r\n        \"li\",\r\n        \"ln\",\r\n        \"lt\",\r\n        \"lmo\",\r\n        \"lg\",\r\n        \"luo\",\r\n        \"lb\",\r\n        \"mk\",\r\n        \"mad\",\r\n        \"mai\",\r\n        \"mak\",\r\n        \"mg\",\r\n        \"ms\",\r\n        \"ms-Arab\",\r\n        \"ml\",\r\n        \"mt\",\r\n        \"mam\",\r\n        \"gv\",\r\n        \"mi\",\r\n        \"mr\",\r\n        \"mh\",\r\n        \"mwr\",\r\n        \"mfe\",\r\n        \"chm\",\r\n        \"mni-Mtei\",\r\n        \"min\",\r\n        \"lus\",\r\n        \"mn\",\r\n        \"my\",\r\n        \"nhe\",\r\n        \"ndc-ZW\",\r\n        \"nr\",\r\n        \"new\",\r\n        \"ne\",\r\n        \"bm-Nkoo\",\r\n        \"no\",\r\n        \"nus\",\r\n        \"oc\",\r\n        \"or\",\r\n        \"om\",\r\n        \"os\",\r\n        \"pag\",\r\n        \"pap\",\r\n        \"ps\",\r\n        \"fa\",\r\n        \"pl\",\r\n        \"pt\",\r\n        \"pt-PT\",\r\n        \"pa\",\r\n        \"pa-Arab\",\r\n        \"qu\",\r\n        \"kek\",\r\n        \"rom\",\r\n        \"ro\",\r\n        \"rn\",\r\n        \"ru\",\r\n        \"se\",\r\n        \"sm\",\r\n        \"sg\",\r\n        \"sa\",\r\n        \"sat-Latn\",\r\n        \"sat\",\r\n        \"gd\",\r\n        \"nso\",\r\n        \"sr\",\r\n        \"st\",\r\n        \"crs\",\r\n        \"shn\",\r\n        \"sn\",\r\n        \"scn\",\r\n        \"szl\",\r\n        \"sd\",\r\n        \"si\",\r\n        \"sk\",\r\n        \"sl\",\r\n        \"so\",\r\n        \"es\",\r\n        \"su\",\r\n        \"sus\",\r\n        \"sw\",\r\n        \"ss\",\r\n        \"sv\",\r\n        \"ty\",\r\n        \"tg\",\r\n        \"ber-Latn\",\r\n        \"ber\",\r\n        \"ta\",\r\n        \"tt\",\r\n        \"te\",\r\n        \"tet\",\r\n        \"th\",\r\n        \"bo\",\r\n        \"ti\",\r\n        \"tiv\",\r\n        \"tpi\",\r\n        \"to\",\r\n        \"lua\",\r\n        \"ts\",\r\n        \"tn\",\r\n        \"tcy\",\r\n        \"tum\",\r\n        \"tr\",\r\n        \"tk\",\r\n        \"tyv\",\r\n        \"ak\",\r\n        \"udm\",\r\n        \"uk\",\r\n        \"ur\",\r\n        \"ug\",\r\n        \"uz\",\r\n        \"ve\",\r\n        \"vec\",\r\n        \"vi\",\r\n        \"war\",\r\n        \"cy\",\r\n        \"wo\",\r\n        \"xh\",\r\n        \"sah\",\r\n        \"yi\",\r\n        \"yo\",\r\n        \"yua\",\r\n        \"zap\",\r\n        \"zu\"\r\n\r\n    ];\r\n\r\n    return languages;\r\n}","import ModalStringScroll from \"../../stringModalScroll/index.js\";\r\n\r\n/**\r\n * Initializes Google Translate functionality on specific elements based on provided data.\r\n * @param {Object} data - The data containing source and target languages.\r\n */\r\nconst GoogleTranslater = (data) => {\r\n\r\n    const { sourceLang, targetLang, ID, translateStatusHandler, modalRenderId } = data;\r\n\r\n    let lang=targetLang;\r\n    let srcLang=sourceLang;\r\n    \r\n    if(lang === 'zh'){\r\n        lang=lmatPageTranslationGlobal.languageObject['zh']?.locale.replace('_', '-');\r\n    }\r\n\r\n    if(srcLang === 'zh'){\r\n        srcLang=lmatPageTranslationGlobal.languageObject['zh']?.locale.replace('_', '-');\r\n    }\r\n    \r\n    new google.translate.TranslateElement({\r\n        pageLanguage: srcLang,\r\n        includedLanguages: lang,\r\n        defaultLanguage: srcLang,\r\n        multilanguagePage: true,\r\n        autoDisplay: false,\r\n    }, ID);\r\n\r\n    const element=document.querySelector(`#${ID}`);\r\n\r\n    if(element){\r\n        const translateElement=element.children;\r\n        \r\n        if(translateElement.length <= 0){\r\n            Object.values(google?.translate?.TranslateElement()).map(item=>{\r\n                if(item instanceof HTMLElement && item.id === 'atfp_google_translate_element'){\r\n                    element.replaceWith(item);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    document.querySelector(`#${ID}`).addEventListener('change', () => {\r\n        ModalStringScroll(translateStatusHandler,'google', modalRenderId);\r\n    });\r\n\r\n}\r\n\r\nexport default GoogleTranslater;","import GoogleTranslater from \"./google/index.js\";\r\n\r\nimport { sprintf, __ } from \"@wordpress/i18n\";\r\n\r\n/**\r\n * Provides translation services using Yandex Translate.\r\n */\r\nexport default (props) => {\r\n    props=props || {};\r\n    const { Service = false, openErrorModalHandler=()=>{} } = props;\r\n    const adminUrl = window.lmatPageTranslationGlobal.admin_url;\r\n    const assetsUrl = window.lmatPageTranslationGlobal.lmat_url+'Admin/Assets/images/';\r\n    const errorIcon = assetsUrl + 'error-icon.svg';\r\n\r\n    const Services = {\r\n        google: {\r\n            Provider: GoogleTranslater,\r\n            title: \"Google Translate\",\r\n            SettingBtnText: \"Translate\",\r\n            serviceLabel: \"Google Translate\",\r\n            Docs: \"https://docs.coolplugins.net/doc/google-translate-for-polylang/?utm_source=atfpp_plugin&utm_medium=inside&utm_campaign=docs&utm_content=popup_google\",\r\n            heading: __(\"Choose Language\", 'linguator-multilingual-ai-translation'),\r\n            BetaEnabled: false,\r\n            ButtonDisabled: props.googleButtonDisabled,\r\n            ErrorMessage: props.googleButtonDisabled ? <div className=\"lmat-provider-error button button-primary\" onClick={() => openErrorModalHandler(\"google\")}><img src={errorIcon} alt=\"error\" /> {__('View Error', 'linguator-multilingual-ai-translation')}</div> : <></>,\r\n            Logo: 'google.png'\r\n        },\r\n        localAiTranslator: {\r\n            title: \"Chrome Built-in AI\",\r\n            SettingBtnText: \"Translate\",\r\n            serviceLabel: \"Chrome AI Translator\",\r\n            heading: sprintf(__(\"Translate Using %s\", 'autopoly-ai-translation-for-polylang'), \"Chrome built-in API\"),\r\n            Docs: \"https://docs.coolplugins.net/doc/chrome-ai-translation-polylang/?utm_source=lmat_page_translation_plugin&utm_medium=inside&utm_campaign=docs&utm_content=popup_chrome\",\r\n            BetaEnabled: true,  \r\n            ButtonDisabled: true,\r\n            ErrorMessage: true ? <div className=\"lmat-page-translation-provider-disabled button button-primary\">{__('Upcoming Feature', 'autopoly-ai-translation-for-polylang')}</div> : <></>,\r\n            Logo: 'chrome.png'\r\n        }\r\n    };\r\n\r\n    if (!Service) {\r\n        return Services;\r\n    }\r\n    return Services[Service];\r\n};\r\n","import { dispatch } from '@wordpress/data';\r\n\r\nconst RankMathSeo = (props) => {\r\n    if (!dispatch(\"rank-math\")) {\r\n        return;\r\n    }\r\n    const { updateKeywords,\r\n        updateTitle,\r\n        updateDescription,\r\n        updateBreadcrumbTitle,\r\n        updateFacebookTitle,\r\n        updateFacebookDescription,\r\n        updateTwitterTitle,\r\n        updateTwitterDescription\r\n    } = dispatch(\"rank-math\");\r\n\r\n    const { key, value } = props;\r\n\r\n    switch (key) {\r\n        case 'rank_math_focus_keyword':\r\n            if (updateKeywords) {\r\n                updateKeywords(value);\r\n            }\r\n            break;\r\n        case 'rank_math_title':\r\n            if (updateTitle) {\r\n                updateTitle(value);\r\n            }\r\n            break;\r\n        case 'rank_math_description':\r\n            if (updateDescription) {\r\n                updateDescription(value);\r\n            }\r\n            break;\r\n        case 'rank_math_breadcrumb_title':\r\n            if (updateBreadcrumbTitle) {\r\n                updateBreadcrumbTitle(value);\r\n            }\r\n            break;\r\n        case 'rank_math_facebook_title':\r\n            if (updateFacebookTitle) {\r\n                updateFacebookTitle(value);\r\n            }\r\n            break;\r\n        case 'rank_math_facebook_description':\r\n            if (updateFacebookDescription) {\r\n                updateFacebookDescription(value);\r\n            }\r\n            break;\r\n        case 'rank_math_twitter_title':\r\n            if (updateTwitterTitle) {\r\n                updateTwitterTitle(value);\r\n            }\r\n            break;\r\n        case 'rank_math_twitter_description':\r\n            if (updateTwitterDescription) {\r\n                updateTwitterDescription(value);\r\n            }\r\n            break;\r\n    }\r\n}\r\n\r\nexport default RankMathSeo;","const SeoPressFields = async (props) => {\r\n    \r\n    const { key, value } = props;\r\n    const inputId = key.replace(/^_/, '') + '_meta';\r\n\r\n    if (!document.querySelector('#' + inputId)) {\r\n        return;\r\n    }\r\n\r\n    switch (key) {\r\n        case '_seopress_titles_title':\r\n        case '_seopress_titles_desc':\r\n        case '_seopress_social_fb_title':\r\n        case '_seopress_social_fb_desc':\r\n        case '_seopress_social_twitter_title':\r\n        case '_seopress_social_twitter_desc':\r\n            jQuery(`#${inputId}`).val(value);\r\n            jQuery(`#${inputId}`).trigger('change');\r\n            break;\r\n        case '_seopress_analysis_target_kw':\r\n            if (window.target_kw && window.target_kw instanceof window.Tagify && window.target_kw.DOM.originalInput.id === inputId) {\r\n                window.target_kw.addTags(value);\r\n            } else {\r\n                jQuery('#' + inputId).val(value);\r\n                jQuery('#' + inputId).trigger('change');\r\n            }\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport default SeoPressFields;","import { dispatch } from \"@wordpress/data\";\r\n\r\nconst YoastSeoFields = (props) => {\r\n    if (!dispatch(\"yoast-seo/editor\")) {\r\n        return;\r\n    }\r\n    const {\r\n        updateData,\r\n        setFocusKeyword,\r\n        setBreadcrumbsTitle,\r\n        setFacebookPreviewTitle,\r\n        setFacebookPreviewDescription,\r\n        setTwitterPreviewTitle,\r\n        setTwitterPreviewDescription,\r\n    } = dispatch(\"yoast-seo/editor\");\r\n    \r\n    const { key, value } = props;\r\n\r\n    switch (key) {\r\n        case \"_yoast_wpseo_focuskw\":\r\n            if (setFocusKeyword) {\r\n                setFocusKeyword(value);\r\n            }\r\n            break;\r\n        case \"_yoast_wpseo_title\":\r\n            if (updateData) {\r\n                updateData({ title: value });\r\n            }\r\n            break;\r\n        case \"_yoast_wpseo_metadesc\":\r\n            if (updateData) {\r\n                updateData({ description: value });\r\n            }\r\n            break;\r\n        case \"_yoast_wpseo_bctitle\":\r\n            if (setBreadcrumbsTitle) {\r\n                setBreadcrumbsTitle(value);\r\n            }\r\n            break;\r\n        case \"_yoast_wpseo_opengraph-title\":\r\n            if (setFacebookPreviewTitle) {\r\n                setFacebookPreviewTitle(value);\r\n            }\r\n            break;\r\n        case \"_yoast_wpseo_opengraph-description\":\r\n            if (setFacebookPreviewDescription) {\r\n                setFacebookPreviewDescription(value);\r\n            }\r\n            break;\r\n        case \"_yoast_wpseo_twitter-title\":\r\n            if (setTwitterPreviewTitle) {\r\n                setTwitterPreviewTitle(value);\r\n            }\r\n            break;\r\n        case \"_yoast_wpseo_twitter-description\":\r\n            if (setTwitterPreviewDescription) {\r\n                setTwitterPreviewDescription(value);\r\n            }\r\n            break;\r\n    }\r\n};\r\n\r\nexport default YoastSeoFields;\r\n","import { dispatch, select } from '@wordpress/data';\r\n\r\n/**\r\n * Saves the translation data by updating the translation content based on the provided translate object and data.\r\n * @param {Object} translateData - The data containing translation information.\r\n */\r\nconst SaveTranslation = ({type, key, translateContent, source, provider, AllowedMetaFields}) => {\r\n    if (['title', 'excerpt'].includes(type)) {\r\n        const action = `${type}SaveTranslate`;\r\n        dispatch('block-lmatMachineTranslate/translate')[action](translateContent, provider);\r\n    } else if (['metaFields'].includes(type)) {\r\n\r\n        if(Object.keys(AllowedMetaFields).includes(key)){\r\n            dispatch('block-lmatMachineTranslate/translate').metaFieldsSaveTranslate(key, translateContent, source, provider);\r\n        }\r\n    } else {\r\n        dispatch('block-lmatMachineTranslate/translate').contentSaveTranslate(key, translateContent, source, provider);\r\n    }\r\n}\r\n\r\nexport default SaveTranslation;","import SaveTranslation from \"../storeTranslatedString/index.js\";\r\nimport { select, dispatch } from \"@wordpress/data\";\r\nimport StoreTimeTaken from \"../StoreTimeTaken/index.js\";\r\nimport AddProgressBar from \"../ProgressBar/index.js\";\r\nimport ShowStringCount from \"../ProgressBar/showStringCount.js\";\r\n\r\n/**\r\n * Handles the scrolling animation of a specified element.\r\n * \r\n * @param {Object} props - The properties for the scroll animation.\r\n * @param {HTMLElement} props.element - The element to be scrolled.\r\n * @param {number} props.scrollSpeed - The duration of the scroll animation in milliseconds.\r\n */\r\nconst ScrollAnimation = (props) => {\r\n    const { element, scrollSpeed, provider } = props;\r\n\r\n    if(element.scrollHeight - element.offsetHeight <= 0){\r\n        return;\r\n    }\r\n\r\n    const progressBar = jQuery(`.${provider}-translator_progress_bar`);\r\n    \r\n    let startTime = null;\r\n    let startScrollTop = element.scrollTop;\r\n    const animateScroll = () => {\r\n        const scrollHeight = element.scrollHeight - element.offsetHeight + 100;\r\n        const currentTime = performance.now();\r\n        const duration = scrollSpeed;\r\n        const scrollTarget = scrollHeight + 2000;\r\n\r\n        if (!startTime) {\r\n            startTime = currentTime;\r\n        }\r\n\r\n        const progress = (currentTime - startTime) / duration;\r\n        const scrollPosition = startScrollTop + (scrollTarget - startScrollTop) * progress;\r\n\r\n        var scrollTop = element.scrollTop;\r\n        var currentScrollHeight = element.scrollHeight;\r\n        var clientHeight = element.clientHeight;\r\n        var scrollPercentage = (scrollTop / (currentScrollHeight - clientHeight)) * 100;\r\n        progressBar.find(`.${provider}-translator_progress`).css('width', scrollPercentage + '%');\r\n\r\n        let percentage=(Math.round(scrollPercentage * 10) / 10).toFixed(1);\r\n        percentage = Math.min(percentage, 100).toString();\r\n\r\n        progressBar.find(`.${provider}-translator_progress`).text(percentage + '%');\r\n\r\n        if (scrollPosition > scrollHeight) {\r\n            ShowStringCount(provider, 'block');\r\n            return; // Stop animate scroll\r\n        }\r\n\r\n        element.scrollTop = scrollPosition;\r\n\r\n        if (scrollPosition < scrollHeight) {\r\n            setTimeout(animateScroll, 16);\r\n        }\r\n    }\r\n    animateScroll();\r\n};\r\n\r\n/**\r\n * Updates the translated content in the string container based on the provided translation object.\r\n */\r\nconst updateTranslatedContent = ({provider, startTime, endTime}) => {\r\n    const container = document.getElementById(\"lmat_page_translation_strings_model\");\r\n    const stringContainer = container.querySelector('.lmat_page_translation_string_container');\r\n    const translatedData = stringContainer.querySelectorAll('td.translate[data-string-type]:not([data-translate-status=\"translated\"])');\r\n    const totalTranslatedData = translatedData.length;\r\n    const AllowedMetaFields = select('block-lmatMachineTranslate/translate').getAllowedMetaFields();\r\n\r\n    translatedData.forEach((ele, index) => {\r\n        const translatedText = ele.innerText;\r\n        const key = ele.dataset.key;\r\n        const type = ele.dataset.stringType;\r\n        const sourceText = ele.closest('tr').querySelector('td[data-source=\"source_text\"]').innerText;\r\n\r\n        SaveTranslation({ type: type, key: key, translateContent: translatedText, source: sourceText, provider: provider, AllowedMetaFields });\r\n\r\n        const translationEntry = select('block-lmatMachineTranslate/translate').getTranslationInfo().translateData[provider];\r\n        const previousTargetStringCount = translationEntry && translationEntry.targetStringCount ? translationEntry.targetStringCount : 0;\r\n        const previousTargetWordCount = translationEntry && translationEntry.targetWordCount ? translationEntry.targetWordCount : 0;\r\n        const previousTargetCharacterCount = translationEntry && translationEntry.targetCharacterCount ? translationEntry.targetCharacterCount : 0;\r\n\r\n        if (translatedText.trim() !== '' && translatedText.trim().length > 0) {\r\n            dispatch('block-lmatMachineTranslate/translate').translationInfo({ targetStringCount: previousTargetStringCount + sourceText.trim().split(/(?<=[.!?]+)\\s+/).length, targetWordCount: previousTargetWordCount + sourceText.trim().split(/\\s+/).filter(word => /[^\\p{L}\\p{N}]/.test(word)).length, targetCharacterCount: previousTargetCharacterCount + sourceText.trim().length, provider: provider });\r\n        }\r\n\r\n        if(index === totalTranslatedData - 1){\r\n            jQuery(`.${provider}-translator_progress`).css('width', '100%');\r\n            ShowStringCount(provider, 'block');\r\n\r\n            StoreTimeTaken({ prefix: provider, start: startTime, end: endTime, translateStatus: true });\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Handles the completion of the translation process by enabling the save button,\r\n * updating the UI, and stopping the translation progress.\r\n * \r\n * @param {HTMLElement} container - The container element for translation.\r\n * @param {number} startTime - The start time of the translation.\r\n * @param {number} endTime - The end time of the translation.\r\n * @param {Function} translateStatus - The function to call when the translation is complete.\r\n */\r\nconst onCompleteTranslation = ({container,provider, startTime, endTime, translateStatus, modalRenderId}) => {\r\n    const conainer=document.querySelector(`#lmat-page-translation-${provider}-strings-modal.modal-container[data-render-id=\"${modalRenderId}\"]`);\r\n\r\n\r\n    if(!conainer){\r\n        return;\r\n    }\r\n\r\n    container.querySelector(\".lmat_page_translation_translate_progress\").style.display = \"none\";\r\n    container.querySelector(\".lmat_page_translation_string_container\").style.animation = \"none\";\r\n    document.body.style.top = '0';\r\n\r\n    const saveButton = container.querySelector('button.save_it');\r\n    saveButton.removeAttribute('disabled');\r\n    saveButton.classList.add('translated');\r\n    saveButton.classList.remove('notranslate');\r\n\r\n    updateTranslatedContent({provider, startTime, endTime});\r\n\r\n    translateStatus(false);\r\n}\r\n\r\n/**\r\n * Automatically scrolls the string container and triggers the completion callback\r\n * when the bottom is reached or certain conditions are met.\r\n * \r\n * @param {Function} translateStatus - Callback function to execute when translation is deemed complete.\r\n * @param {string} provider - The provider of the translation.\r\n */\r\nconst ModalStringScroll = (translateStatus,provider,modalRenderId) => {\r\n    const startTime = new Date().getTime();\r\n\r\n    let translateComplete = false;\r\n    AddProgressBar(provider);\r\n\r\n    const container = document.getElementById(\"lmat_page_translation_strings_model\");\r\n    const stringContainer = container.querySelector('.lmat_page_translation_string_container');\r\n\r\n    stringContainer.scrollTop = 0;\r\n    const scrollHeight = stringContainer.scrollHeight;\r\n\r\n    if (scrollHeight !== undefined && scrollHeight > 100) {\r\n        document.querySelector(\".lmat_page_translation_translate_progress\").style.display = \"block\";\r\n\r\n        setTimeout(() => {\r\n            const scrollSpeed = Math.ceil((scrollHeight / stringContainer?.offsetHeight)) * 2000;\r\n            ScrollAnimation({ element: stringContainer, scrollSpeed: scrollSpeed, provider: provider });\r\n        }, 2000);\r\n\r\n        stringContainer.addEventListener('scroll', () => {\r\n            var isScrolledToBottom = (stringContainer.scrollTop + stringContainer.clientHeight + 50 >= stringContainer.scrollHeight);\r\n\r\n            if (isScrolledToBottom && !translateComplete) {\r\n                const endTime = new Date().getTime();\r\n                setTimeout(() => {\r\n                    onCompleteTranslation({container,provider, startTime, endTime, translateStatus, modalRenderId});\r\n                }, 4000);\r\n                translateComplete = true;\r\n            }\r\n        });\r\n\r\n        if (stringContainer.clientHeight + 10 >= scrollHeight) {\r\n            jQuery(`.${provider}-translator_progress`).css('width', '100%');\r\n            jQuery(`.${provider}-translator_progress`).text('100%');\r\n            ShowStringCount(provider, 'block');\r\n            const endTime = new Date().getTime();\r\n            \r\n            setTimeout(() => {\r\n                onCompleteTranslation({container,provider, startTime, endTime, translateStatus, modalRenderId});\r\n            }, 4000);\r\n        }\r\n    } else {\r\n        jQuery(`.${provider}-translator_progress`).css('width', '100%');\r\n        jQuery(`.${provider}-translator_progress`).text('100%');\r\n        ShowStringCount(provider, 'block');\r\n        const endTime = new Date().getTime();\r\n   \r\n        setTimeout(() => {\r\n            onCompleteTranslation({container,provider, startTime, endTime, translateStatus, modalRenderId});\r\n        }, 4000);\r\n    }\r\n}\r\n\r\nexport default ModalStringScroll;","import { select } from '@wordpress/data';\r\nimport YoastSeoFields from '../../component/TranslateSeoFields/YoastSeoFields.js';\r\nimport RankMathSeo from '../../component/TranslateSeoFields/RankMathSeo.js';\r\n\r\n// Update widget content with translations\r\nconst lmatMachineTranslateUpdateWidgetContent = (translations) => {\r\n\r\n    translations.forEach(translation => {\r\n        // Find the model by ID using the lmatMachineTranslateFindModelById function\r\n        const model = lmatMachineTranslateFindModelById(elementor.elements.models, translation.ID);\r\n        if (model) {\r\n            const settings = model.get('settings');\r\n\r\n            // Check for normal fields (title, text, editor, etc.)\r\n            if (settings.get(translation.key)) {\r\n                settings.set(translation.key, translation.translatedContent);  // Set the translated content\r\n            }\r\n\r\n            // Handle repeater fields (if any)\r\n            const repeaterMatch = translation.key.match(/(.+)\\[(\\d+)\\]\\.(.+)/);\r\n\r\n            if (repeaterMatch) {\r\n\r\n                const [_, repeaterKey, index, subKey] = repeaterMatch;\r\n                const repeaterArray = settings.get(repeaterKey);\r\n                if (Array.isArray(repeaterArray.models) && repeaterArray.models[index]) {\r\n                    let repeaterModel = repeaterArray.models[index]\r\n                    let repeaterAttribute = repeaterModel.attributes\r\n                    repeaterAttribute[subKey] = translation.translatedContent;\r\n\r\n                    settings.set(repeaterKey, repeaterArray); // Set the updated array back to settings\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    // After updating content, ensure that the changes are saved or published\r\n    $e.internal('document/save/set-is-modified', { status: true });\r\n}\r\n\r\nconst lmatMachineTranslateUpdateMetaFields = (metaFields, service) => {\r\n    const AllowedMetaFields = select('block-lmatMachineTranslate/translate').getAllowedMetaFields();\r\n\r\n        Object.keys(metaFields).forEach(key => {\r\n            // Update yoast seo meta fields\r\n            if (Object.keys(AllowedMetaFields).includes(key)) {\r\n                const translatedMetaFields = select('block-lmatMachineTranslate/translate').getTranslatedString('metaFields', metaFields[key][0], key, service);\r\n                if (key.startsWith('_yoast_wpseo_') && AllowedMetaFields[key].inputType === 'string') {\r\n                    YoastSeoFields({ key: key, value: translatedMetaFields });\r\n                } else if (key.startsWith('rank_math_') && AllowedMetaFields[key].inputType === 'string') {\r\n                    RankMathSeo({ key: key, value: translatedMetaFields });\r\n                } else if (key.startsWith('_seopress_') && AllowedMetaFields[key].inputType === 'string') {\r\n                    elementor?.settings?.page?.model?.setExternalChange(key, translatedMetaFields);\r\n                }\r\n            };\r\n        });\r\n}\r\n\r\n// Find Elementor model by ID\r\nconst lmatMachineTranslateFindModelById = (elements, id) => {\r\n    for (const model of elements) {\r\n        if (model.get('id') === id) {\r\n            return model;\r\n        }\r\n        const nestedElements = model.get('elements').models;\r\n        const foundModel = lmatMachineTranslateFindModelById(nestedElements, id);\r\n        if (foundModel) {\r\n            return foundModel;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nconst updateElementorPage = ({ postContent, modalClose, service }) => {\r\n    const postID = elementor.config.document.id;\r\n\r\n    // Collect translated content\r\n    const translations = [];\r\n\r\n    // Define a list of properties to exclude\r\n    const cssProperties = [\r\n        'content_width', 'title_size', 'font_size', 'margin', 'padding', 'background', 'border', 'color', 'text_align',\r\n        'font_weight', 'font_family', 'line_height', 'letter_spacing', 'text_transform', 'border_radius', 'box_shadow',\r\n        'opacity', 'width', 'height', 'display', 'position', 'z_index', 'visibility', 'align', 'max_width', 'content_typography_typography', 'flex_justify_content', 'title_color', 'description_color', 'email_content'\r\n    ];\r\n\r\n    const storeSourceStrings = (element,index, ids=[]) => {\r\n        const widgetId = element.id;\r\n        const settings = element.settings;\r\n        ids.push(index)\r\n\r\n        // Check if settings is an object\r\n        if (typeof settings === 'object' && settings !== null) {\r\n            // Define the substrings to check for translatable content\r\n            const substringsToCheck = ['title', 'description', 'editor', 'text', 'content', 'label'];\r\n\r\n            // Iterate through the keys in settings\r\n            Object.keys(settings).forEach(key => {\r\n                // Skip keys that are CSS properties\r\n                if (cssProperties.some(substring => key.toLowerCase().includes(substring))) {\r\n                    return; // Skip this property and continue to the next one\r\n                }\r\n\r\n                // Check if the key includes any of the specified substrings\r\n                if (substringsToCheck.some(substring => key.toLowerCase().includes(substring)) &&\r\n                    typeof settings[key] === 'string' && settings[key].trim() !== '') {\r\n                    const uniqueKey = ids.join('_lmat_page_translation_') + '_lmat_page_translation_settings_lmat_page_translation_' + key;\r\n\r\n                    const translatedData = select('block-lmatMachineTranslate/translate').getTranslatedString('content', settings[key], uniqueKey, service);\r\n\r\n                    translations.push({\r\n                        ID: widgetId,\r\n                        key: key,\r\n                        translatedContent: translatedData\r\n                    })\r\n                }\r\n\r\n                // Check for arrays (possible repeater fields) within settings\r\n                if (Array.isArray(settings[key])) {\r\n                    settings[key].forEach((item, index) => {\r\n                        if (typeof item === 'object' && item !== null) {\r\n                            // Check for translatable content in repeater fields\r\n                            Object.keys(item).forEach(repeaterKey => {\r\n                                // Skip if it's a CSS-related property\r\n                                if (cssProperties.includes(repeaterKey.toLowerCase())) {\r\n                                    return; // Skip this property\r\n                                }\r\n\r\n                                if (substringsToCheck.some(substring => repeaterKey.toLowerCase().includes(substring)) &&\r\n                                    typeof item[repeaterKey] === 'string' && item[repeaterKey].trim() !== '') {\r\n\r\n                                    const fieldKey = `${key}[${index}].${repeaterKey}`\r\n                                    const uniqueKey = ids.join('_lmat_page_translation_') + '_lmat_page_translation_settings_lmat_page_translation_' + key + '_lmat_page_translation_' + index + '_lmat_page_translation_' + repeaterKey;\r\n\r\n                                    const translatedData = select('block-lmatMachineTranslate/translate').getTranslatedString('content', item[repeaterKey], uniqueKey, service);\r\n\r\n                                    translations.push({\r\n                                        ID: widgetId,\r\n                                        key: fieldKey,\r\n                                        translatedContent: translatedData\r\n                                    })\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        // If there are nested elements, process them recursively\r\n        if (element.elements && Array.isArray(element.elements)) {\r\n            element.elements.forEach((nestedElement,index) => {\r\n                storeSourceStrings(nestedElement,index, [...ids, 'elements']);\r\n            });\r\n        }\r\n    }\r\n\r\n    postContent.widgetsContent.map((widget,index) => storeSourceStrings(widget,index,[]));\r\n\r\n    // Update widget content with translations\r\n    lmatMachineTranslateUpdateWidgetContent(translations);\r\n    \r\n    // Update Meta Fields\r\n    lmatMachineTranslateUpdateMetaFields(postContent.metaFields, service);\r\n\r\n    const replaceSourceString=()=>{\r\n        const elementorData = lmatPageTranslationGlobal.elementorData;\r\n        const translateStrings=wp.data.select('block-lmatMachineTranslate/translate').getTranslationEntry();\r\n\r\n        translateStrings.forEach(translation => {\r\n            const sourceString = translation.source;\r\n            const ids = translation.id;\r\n            const translatedContent = translation.translatedData;\r\n            const type=translation.type;\r\n\r\n            if(!sourceString || '' === sourceString && 'content' !== type){\r\n                return;\r\n            }\r\n            \r\n            const keyArray = ids.split('_lmat_page_translation_');\r\n            \r\n            const translateValue = translatedContent[service];\r\n            let parentElement = null;\r\n            let parentKey = null;\r\n\r\n            let currentElement = elementorData;\r\n               \r\n            keyArray.forEach(key => {\r\n                parentElement = currentElement;\r\n                parentKey = key;\r\n                currentElement = currentElement[key];\r\n            });\r\n\r\n            if(parentElement && parentKey && parentElement[parentKey] && parentElement[parentKey] === sourceString){\r\n                parentElement[parentKey] = translateValue;\r\n            }\r\n        });\r\n\r\n        return elementorData;\r\n    }\r\n\r\n    \r\n    const elementorData = replaceSourceString();\r\n\r\n    fetch(lmatPageTranslationGlobal.ajax_url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n            'Accept': 'application/json',\r\n        },\r\n        body: new URLSearchParams(\r\n            {\r\n                action: lmatPageTranslationGlobal.update_elementor_data,\r\n                post_id: postID,\r\n                elementor_data: JSON.stringify(elementorData),\r\n                lmat_page_translation_nonce: lmatPageTranslationGlobal.ajax_nonce\r\n            }\r\n        )\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                const translateButton = document.querySelector('.lmat-page-translation-button[name=\"lmat_page_translation_meta_box_translate\"]');\r\n                if(translateButton){\r\n                    translateButton.setAttribute('title', 'Translation process completed successfully.');\r\n                }\r\n                elementor.reloadPreview();\r\n            } else {\r\n                console.error('Failed to update Elementor data:', data.data);\r\n            }\r\n            \r\n            elementor.reloadPreview();\r\n            modalClose();\r\n        })\r\n        .catch(error => {\r\n            elementor.reloadPreview();\r\n            modalClose();\r\n            console.error('Error updating Elementor data:', error);\r\n        });\r\n}\r\n\r\nexport default updateElementorPage;\r\n","import FilterBlockNestedAttr from \"../../component/FilterNestedAttr/index.js\";\r\n\r\n/**\r\n * Filters and translates attributes of a block based on provided rules.\r\n * \r\n * @param {Object} block - The block to filter and translate attributes for.\r\n * @param {Object} blockParseRules - The rules for parsing the block.\r\n * @returns {Object} The updated block with translated attributes.\r\n */\r\nconst filterTranslateAttr = (block, blockParseRules, service) => {\r\n    \r\n    const { select } = wp.data;\r\n\r\n    const filterAttrArr = Object.values(blockParseRules);\r\n    const blockAttr = block.attributes;\r\n    const blockId = block.clientId;\r\n\r\n    // Function to update a nested attribute in the block\r\n    const updateNestedAttribute = (obj, path, value) => {\r\n\r\n        const newObj = { ...obj };\r\n        let current = newObj;\r\n        for (let i = 0; i < path.length - 1; i++) {\r\n            if (Object.getPrototypeOf(current[path[i]]) === Array.prototype) {\r\n                current[path[i]] = [...current[path[i]]];\r\n            } else {\r\n                current[path[i]] = { ...current[path[i]] }; // Create a shallow copy\r\n            }\r\n            current = current[path[i]];\r\n        }\r\n\r\n        if (current[path[path.length - 1]] instanceof wp.richText.RichTextData) {\r\n            current[path[path.length - 1]] = value.replace(/(?<!\\\\)\"|\\\\\"/g, \"'\");\r\n        } else {\r\n            current[path[path.length - 1]] = value;\r\n        }\r\n\r\n        return newObj;\r\n    };\r\n\r\n    /**\r\n     * Updates translated attributes based on provided ID array and filter attribute object.\r\n     * \r\n     * @param {Array} idArr - The array of IDs to update attributes for.\r\n     * @param {Object|Array} filterAttrObj - The filter attribute object to apply.\r\n     */\r\n    const updateTranslatedAttr = (idArr, filterAttrObj) => {\r\n\r\n        if (true === filterAttrObj) {\r\n\r\n            const newIdArr = new Array(...idArr);\r\n            const childIdArr = new Array();\r\n\r\n            let dynamicBlockAttr = blockAttr;\r\n            let uniqueId = blockId;\r\n\r\n            newIdArr.forEach(key => {\r\n                childIdArr.push(key);\r\n                uniqueId += `lmatMachineTranslate${key}`;\r\n                dynamicBlockAttr = dynamicBlockAttr[key];\r\n            });\r\n\r\n            let blockAttrContent = dynamicBlockAttr;\r\n\r\n            if (blockAttrContent instanceof wp.richText.RichTextData) {\r\n                blockAttrContent = blockAttrContent.originalHTML;\r\n            }\r\n\r\n            if (undefined !== blockAttrContent && blockAttrContent.trim() !== '') {\r\n                let filterKey = uniqueId.replace(/[^\\p{L}\\p{N}]/gu, '');\r\n                let translateContent = '';\r\n\r\n                if (!/[\\p{L}\\p{N}]/gu.test(blockAttrContent)) {\r\n                    translateContent = blockAttrContent;\r\n                } else {\r\n                    translateContent = select('block-lmatMachineTranslate/translate').getTranslatedString('content', blockAttrContent, filterKey, service);\r\n                }\r\n\r\n                block.attributes = updateNestedAttribute(block.attributes, newIdArr, translateContent);\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        FilterBlockNestedAttr(idArr, filterAttrObj, blockAttr, updateTranslatedAttr);\r\n    }\r\n\r\n    filterAttrArr.forEach(data => {\r\n        Object.keys(data).forEach(key => {\r\n            const idArr = new Array(key);\r\n            updateTranslatedAttr(idArr, data[key]);\r\n        });\r\n    });\r\n\r\n    return block;\r\n}\r\n\r\n/**\r\n * Creates a translated block based on the provided block, child block, translate handler, and block rules.\r\n * If the block name is included in the block rules, it filters and translates the attributes accordingly.\r\n * \r\n * @param {Object} block - The block to create a translated version of.\r\n * @param {Array} childBlock - The child blocks associated with the main block.\r\n * @param {Object} blockRules - The rules for translating blocks.\r\n * @param {String} service - The service to use for translation.\r\n * @returns {Object} The newly created translated block.\r\n */\r\nconst createTranslatedBlock = (block, childBlock, blockRules, service) => {\r\n    const { createBlock } = wp.blocks;\r\n    const { name: blockName, attributes } = block;\r\n    const blockTranslateName = Object.keys(blockRules.LmatBlockParseRules);\r\n\r\n    let attribute = { ...attributes };\r\n    let translatedBlock = block;\r\n    let newBlock = '';\r\n\r\n    if (blockTranslateName.includes(block.name)) {\r\n        translatedBlock = filterTranslateAttr(block, blockRules['LmatBlockParseRules'][block.name], service);\r\n\r\n        attribute = translatedBlock.attributes;\r\n    }\r\n\r\n    newBlock = createBlock(blockName, attribute, childBlock);\r\n\r\n    return newBlock;\r\n}\r\n\r\n/**\r\n * Creates a child block recursively by translating each inner block based on the provided block, translate handler, and block rules.\r\n * \r\n * @param {Object} block - The block to create a child block for.\r\n * @param {Object} blockRules - The rules for translating blocks.\r\n * @returns {Object} The newly created translated child block.\r\n */\r\nconst cretaeChildBlock = (block, blockRules, service) => {\r\n    let childBlock = block.innerBlocks.map(block => {\r\n        if (block.name) {\r\n            const childBlock = cretaeChildBlock(block, blockRules, service);\r\n            return childBlock;\r\n        }\r\n    });\r\n\r\n    const newBlock = createTranslatedBlock(block, childBlock, blockRules, service)\r\n\r\n    return newBlock;\r\n}\r\n\r\n/**\r\n * Creates the main blocks based on the provided block, translate handler, and block rules.\r\n * If the block name exists, it creates the main block along with its child blocks and inserts it into the block editor.\r\n * \r\n * @param {Object} block - The main block to create.\r\n * @param {Object} blockRules - The rules for translating blocks.\r\n */\r\nconst createBlocks = (block, service) => {\r\n    const { select } = wp.data;\r\n    const blockRules = select('block-lmatMachineTranslate/translate').getBlockRules();\r\n\r\n    const { dispatch } = wp.data;\r\n    const { name: blockName } = block;\r\n    // Create the main block\r\n    if (blockName) {\r\n        let childBlock = block.innerBlocks.map(block => {\r\n            if (block.name) {\r\n                return cretaeChildBlock(block, blockRules, service);\r\n            }\r\n        })\r\n        const parentBlock = createTranslatedBlock(block, childBlock, blockRules, service);\r\n\r\n        dispatch('core/block-editor').insertBlock(parentBlock);\r\n\r\n    }\r\n}\r\n\r\nexport default createBlocks;\r\n","import createBlocks from './createBlock.js';\r\nimport { dispatch, select } from '@wordpress/data';\r\nimport YoastSeoFields from '../../component/TranslateSeoFields/YoastSeoFields.js';\r\nimport RankMathSeo from '../../component/TranslateSeoFields/RankMathSeo.js';\r\nimport SeoPressFields from '../../component/TranslateSeoFields/SeoPress.js';\r\n\r\n/**\r\n * Translates the post content and updates the post title, excerpt, and content.\r\n * \r\n * @param {Object} props - The properties containing post content, translation function, and block rules.\r\n */\r\nconst translatePost = (props) => {\r\n    const { editPost } = dispatch('core/editor');\r\n    const { modalClose, postContent, service } = props;\r\n\r\n    /**\r\n     * Updates the post title and excerpt text based on translation.\r\n     */\r\n    const postDataUpdate = () => {\r\n        const data = {};\r\n        const editPostData = Object.keys(postContent).filter(key => ['title', 'excerpt'].includes(key));\r\n\r\n        editPostData.forEach(key => {\r\n            const sourceData = postContent[key];\r\n            if (sourceData.trim() !== '') {\r\n                const translateContent = select('block-lmatMachineTranslate/translate').getTranslatedString(key, sourceData, null, service);\r\n\r\n                data[key] = translateContent;\r\n            }\r\n        });\r\n\r\n        editPost(data);\r\n    }\r\n\r\n    /**\r\n     * Updates the post meta fields based on translation.\r\n     */\r\n    const postMetaFieldsUpdate = () => {\r\n        const metaFieldsData = postContent.metaFields;\r\n        const AllowedMetaFields = select('block-lmatMachineTranslate/translate').getAllowedMetaFields();\r\n\r\n        Object.keys(metaFieldsData).forEach(key => {\r\n            // Update yoast seo meta fields\r\n            if (Object.keys(AllowedMetaFields).includes(key)) {\r\n                const translatedMetaFields = select('block-lmatMachineTranslate/translate').getTranslatedString('metaFields', metaFieldsData[key][0], key, service);\r\n                if (key.startsWith('_yoast_wpseo_') && AllowedMetaFields[key].inputType === 'string') {\r\n                    YoastSeoFields({ key: key, value: translatedMetaFields });\r\n                } else if (key.startsWith('rank_math_') && AllowedMetaFields[key].inputType === 'string') {\r\n                    RankMathSeo({ key: key, value: translatedMetaFields });\r\n                } else if (key.startsWith('_seopress_') && AllowedMetaFields[key].inputType === 'string') {\r\n                    SeoPressFields({ key: key, value: translatedMetaFields });\r\n                } else {\r\n                    editPost({ meta: { [key]: translatedMetaFields } });\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Updates the post ACF fields based on translation.\r\n     */\r\n    const postAcfFieldsUpdate = () => {\r\n        const AllowedMetaFields = select('block-lmatMachineTranslate/translate').getAllowedMetaFields();\r\n        const metaFieldsData = postContent.metaFields;\r\n\r\n        \r\n        if (window.acf) {\r\n            acf.getFields().forEach(field => {\r\n               if(field.data && field.data.key && Object.keys(AllowedMetaFields).includes(field.data.key)){\r\n                   const acfFieldObj = acf.getField(field.data.key);\r\n                   const fieldKey = field.data.key;\r\n                   const fieldName = field.data.name;\r\n                   const inputType = acfFieldObj.data.type;\r\n\r\n                   const sourceValue = metaFieldsData[fieldName]? metaFieldsData[fieldName][0] : acf.getField(fieldKey)?.val();\r\n\r\n                    const translatedMetaFields = select('block-lmatMachineTranslate/translate').getTranslatedString('metaFields', sourceValue, fieldKey, service);\r\n\r\n                    if('wysiwyg' === inputType && tinymce){\r\n                        const editorId = acfFieldObj.data.id;\r\n                        tinymce.get(editorId)?.setContent(translatedMetaFields);\r\n                    }else{\r\n                        acf.getField(fieldKey)?.val(translatedMetaFields);\r\n                    }\r\n               }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates the post content based on translation.\r\n     */\r\n    const postContentUpdate = () => {\r\n        const postContentData = postContent.content;\r\n\r\n        if (postContentData.length <= 0) {\r\n            return;\r\n        }\r\n\r\n        Object.values(postContentData).forEach(block => {\r\n            createBlocks(block, service);\r\n        });\r\n    }\r\n\r\n    // Update post title and excerpt text\r\n    postDataUpdate();\r\n    // Update post meta fields\r\n    postMetaFieldsUpdate();\r\n    // Update post ACF fields\r\n    postAcfFieldsUpdate();\r\n    // Update post content\r\n    postContentUpdate();\r\n    // Close string modal box\r\n    modalClose();\r\n}\r\n\r\nexport default translatePost;","import LmatMachineTranslateActionTypes from \"./types.js\"; // Importing action types from the types module\r\n\r\n/**\r\n * Action creator for saving the source title.\r\n * @param {string} data - The source title to be saved.\r\n * @returns {Object} The action object containing the type and text.\r\n */\r\nexport const titleSaveSource = (data) => {\r\n    return {\r\n        type: LmatMachineTranslateActionTypes.sourceTitle, // Action type for saving the source title\r\n        text: data, // The source title text\r\n    }\r\n};\r\n\r\n/**\r\n * Action creator for saving the translated title.\r\n * @param {string} data - The translated title to be saved.\r\n * @param {string} provider - The provider of the translated title.\r\n * @returns {Object} The action object containing the type, text, and provider.\r\n */\r\nexport const titleSaveTranslate = (data, provider) => {\r\n    return {\r\n        type: LmatMachineTranslateActionTypes.traslatedTitle, // Action type for saving the translated title\r\n        text: data, // The translated title text\r\n        provider: provider // The provider of the translated title\r\n    }\r\n};\r\n\r\n/**\r\n * Action creator for saving the source excerpt.\r\n * @param {string} data - The source excerpt to be saved.\r\n * @returns {Object} The action object containing the type and text.\r\n */\r\nexport const excerptSaveSource = (data) => {\r\n    return {\r\n        type: LmatMachineTranslateActionTypes.sourceExcerpt, // Action type for saving the source excerpt\r\n        text: data, // The source excerpt text\r\n    }\r\n};\r\n\r\n/**\r\n * Action creator for saving the translated excerpt.\r\n * @param {string} data - The translated excerpt to be saved.\r\n * @param {string} provider - The provider of the translated excerpt.\r\n * @returns {Object} The action object containing the type, text, and provider.\r\n */\r\nexport const excerptSaveTranslate = (data, provider) => {\r\n    return {\r\n        type: LmatMachineTranslateActionTypes.traslatedExcerpt, // Action type for saving the translated excerpt\r\n        text: data, // The translated excerpt text\r\n        provider: provider // The provider of the translated excerpt\r\n    }\r\n};\r\n\r\n/**\r\n * Action creator for saving the source content.\r\n * @param {string} id - The identifier for the content.\r\n * @param {string} data - The source content to be saved.\r\n * @returns {Object} The action object containing the type, text, and id.\r\n */\r\nexport const contentSaveSource = (id, data) => {\r\n    return {\r\n        type: LmatMachineTranslateActionTypes.sourceContent, // Action type for saving the source content\r\n        text: data, // The source content text\r\n        id: id // The identifier for the content\r\n    }\r\n};\r\n\r\n/**\r\n * Action creator for saving the translated content.\r\n * @param {string} id - The identifier for the content.\r\n * @param {string} data - The translated content to be saved.\r\n * @param {string} source - The source of the translated content.\r\n * @param {string} provider - The provider of the translated content.\r\n * @returns {Object} The action object containing the type, text, id, source, and provider.\r\n */\r\nexport const contentSaveTranslate = (id, data, source, provider) => {\r\n    return {\r\n        type: LmatMachineTranslateActionTypes.traslatedContent, // Action type for saving the translated content\r\n        text: data, // The translated content text\r\n        id: id, // The identifier for the content\r\n        source: source, // The source of the translated content\r\n        provider: provider // The provider of the translated content\r\n    }\r\n};\r\n\r\n/**\r\n * Action creator for saving the source meta fields.\r\n * @param {string} id - The identifier for the meta fields.\r\n * @param {Object} data - The source meta fields to be saved.\r\n * @returns {Object} The action object containing the type, text, and id.\r\n */\r\nexport const metaFieldsSaveSource = (id, data) => {\r\n    return {\r\n        type: LmatMachineTranslateActionTypes.sourceMetaFields, // Action type for saving the source meta fields\r\n        text: data, // The source meta fields text\r\n        id: id, // The identifier for the meta fields\r\n    }\r\n};\r\n\r\n/**\r\n * Action creator for saving the translated meta fields.\r\n * @param {string} id - The identifier for the meta fields.\r\n * @param {Object} data - The translated meta fields to be saved.\r\n * @param {string} source - The source of the translated meta fields.\r\n * @param {string} provider - The provider of the translated meta fields.\r\n * @returns {Object} The action object containing the type, text, id, source, and provider.\r\n */\r\nexport const metaFieldsSaveTranslate = (id, data, source, provider) => {\r\n    return {\r\n        type: LmatMachineTranslateActionTypes.traslatedMetaFields, // Action type for saving the translated meta fields\r\n        text: data, // The translated meta fields text\r\n        id: id, // The identifier for the meta fields\r\n        source: source, // The source of the translated meta fields\r\n        provider: provider // The provider of the translated meta fields\r\n    }\r\n};\r\n\r\n/**\r\n * Action creator for saving the block rules.\r\n * @param {Object} data - The block rules to be saved.\r\n * @returns {Object} The action object containing the type and data.\r\n */\r\nexport const setBlockRules = (data) => {\r\n    return {\r\n        type: LmatMachineTranslateActionTypes.setBlockRules, // Action type for saving the block rules\r\n        data: data // The block rules data\r\n    }\r\n};\r\n\r\n/**\r\n * Action creator for saving the translation info.\r\n * @param {Object} data - The translation info to be saved.\r\n * @returns {Object} The action object containing the type and data.\r\n */\r\nexport const translationInfo = ({ sourceStringCount = null, sourceWordCount = null, sourceCharacterCount = null, timeTaken = null, provider = null, targetStringCount = null, targetWordCount = null, targetCharacterCount = null, translateStatus = null }) => {\r\n    return {\r\n        type: LmatMachineTranslateActionTypes.translationInfo, // Action type for saving the translation info\r\n        sourceStringCount: sourceStringCount,\r\n        sourceWordCount: sourceWordCount,\r\n        sourceCharacterCount: sourceCharacterCount, // The character count\r\n        timeTaken: timeTaken, // The time taken\r\n        targetStringCount: targetStringCount,\r\n        targetWordCount: targetWordCount,\r\n        targetCharacterCount: targetCharacterCount,\r\n        provider: provider, // The provider\r\n        translateStatus: translateStatus // The translate status\r\n    }\r\n};\r\n\r\n/**\r\n * Action creator for saving the allowed meta fields.\r\n * @param {Object} data - The allowed meta fields to be saved.\r\n * @returns {Object} The action object containing the type and data.\r\n */\r\nexport const allowedMetaFields = ({id, type}) => {\r\n    return {\r\n        type: LmatMachineTranslateActionTypes.allowedMetaFields,\r\n        id: id,\r\n        inputType: type\r\n    }\r\n}\r\n","/**\r\n * This module sets up a Redux store for the automatic translation block.\r\n * It imports the necessary reducer, actions, and selectors, and then\r\n * creates and registers the Redux store with the WordPress data system.\r\n */\r\n\r\n// Import the reducer function from the reducer module, which handles state changes.\r\nimport reducer from \"./reducer.js\";\r\n\r\n// Import all action creators from the actions module, which define how to interact with the store.\r\nimport * as actions from './actions.js';\r\n\r\n// Import all selector functions from the selectors module, which allow us to retrieve specific pieces of state.\r\nimport * as selectors from './selectors.js';\r\n\r\n// Destructure the createReduxStore and register functions from the wp.data object provided by WordPress.\r\nconst { createReduxStore, register } = wp.data;\r\n\r\n// Create a Redux store named 'block-lmatMachineTranslate/translate' with the specified reducer, actions, and selectors.\r\nconst store = createReduxStore('block-lmatMachineTranslate/translate', {\r\n    reducer,   // The reducer function to manage state updates.\r\n    actions,   // The action creators for dispatching actions to the store.\r\n    selectors   // The selectors for accessing specific state values.\r\n});\r\n\r\n// Register the created store with the WordPress data system, making it available for use in the application.\r\nregister(store);","import LmatMachineTranslateActionTypes from \"./types.js\"; // Importing action types from the types module\r\n\r\n/**\r\n * The default state for the translation reducer.\r\n * This state holds the initial values for title, excerpt, content, and metaFields.\r\n * \r\n * @type {Object}\r\n * @property {Object} title - Contains source and target translations for the title.\r\n * @property {Object} excerpt - Contains source and target translations for the excerpt.\r\n * @property {Array} content - An array holding content translations.\r\n * @property {Object} metaFields - Contains source and target translations for meta fields.\r\n */\r\nconst TranslateDefaultState = {\r\n    title: {}, // Initial state for title translations\r\n    excerpt: {}, // Initial state for excerpt translations\r\n    content: [], // Initial state for content translations\r\n    metaFields: {}, // Initial state for meta field translations\r\n    allowedMetaFields: {} // Initial state for allowed meta fields\r\n};\r\n\r\n/**\r\n * The reducer function for handling translation actions.\r\n * This function updates the state based on the action type received.\r\n * \r\n * @param {Object} state - The current state of the reducer.\r\n * @param {Object} action - The action dispatched to the reducer.\r\n * @returns {Object} The new state after applying the action.\r\n */\r\nconst reducer = (state = TranslateDefaultState, action) => {\r\n    switch (action.type) {\r\n        case LmatMachineTranslateActionTypes.sourceTitle: // Action to save the source title\r\n            // Check if the action text contains any letters or numbers\r\n            if (/[\\p{L}\\p{N}]/gu.test(action.text)) {\r\n                // Update the state with the new source title\r\n                return { ...state, title: { ...state.title, source: action.text } };\r\n            }\r\n            return state; // Return the current state if no valid text\r\n\r\n        case LmatMachineTranslateActionTypes.traslatedTitle: // Action to save the translated title\r\n            // Update the state with the new target title\r\n            return { ...state, title: { ...state.title, translatedData: { ...(state.title.translatedData || []), [action.provider]: action.text } } };\r\n\r\n        case LmatMachineTranslateActionTypes.sourceExcerpt: // Action to save the source excerpt\r\n            // Check if the action text contains any letters or numbers\r\n            if (/[\\p{L}\\p{N}]/gu.test(action.text)) {\r\n                // Update the state with the new source excerpt\r\n                return { ...state, excerpt: { ...state.excerpt, source: action.text } };\r\n            }\r\n            return state; // Return the current state if no valid text\r\n\r\n        case LmatMachineTranslateActionTypes.traslatedExcerpt: // Action to save the translated excerpt\r\n            // Update the state with the new target excerpt\r\n            return { ...state, excerpt: { ...state.excerpt, translatedData: { ...(state.excerpt.translatedData || []), [action.provider]: action.text } } };\r\n\r\n        case LmatMachineTranslateActionTypes.sourceContent: // Action to save the source content\r\n            // Check if the action text contains any letters or numbers\r\n            if (/[\\p{L}\\p{N}]/gu.test(action.text)) {\r\n                // Update the state with the new source content for the specific ID\r\n                return { ...state, content: { ...state.content, [action.id]: { ...(state.content[action.id] || []), source: action.text } } };\r\n            }\r\n            return state; // Return the current state if no valid text\r\n\r\n        case LmatMachineTranslateActionTypes.traslatedContent: // Action to save the translated content\r\n            // Check if the source of the content matches the action source\r\n            if (state.content[action.id].source === action.source) {\r\n                // Update the state with the new target content for the specific ID\r\n                return { ...state, content: { ...state.content, [action.id]: { ...(state.content[action.id] || []), translatedData: { ...(state.content[action.id].translatedData || []), [action.provider]: action.text } } } };\r\n            }\r\n            return state; // Return the current state if no match\r\n\r\n        case LmatMachineTranslateActionTypes.sourceMetaFields: // Action to save the source meta fields\r\n            // Check if the action text contains any letters or numbers\r\n            if (/[\\p{L}\\p{N}]/gu.test(action.text)) {\r\n                // Update the state with the new source meta field for the specific ID\r\n                return { ...state, metaFields: { ...state.metaFields, [action.id]: { ...(state.metaFields[action.id] || []), source: action.text } } };\r\n            }\r\n            return state; // Return the current state if no valid text\r\n\r\n        case LmatMachineTranslateActionTypes.traslatedMetaFields: // Action to save the translated meta fields\r\n            // Update the state with the new target meta field for the specific ID\r\n            return { ...state, metaFields: { ...state.metaFields, [action.id]: { ...(state.metaFields[action.id] || []), translatedData: { ...(state.metaFields[action.id].translatedData || []), [action.provider]: action.text } } } };\r\n\r\n        case LmatMachineTranslateActionTypes.setBlockRules: // Action to save the block rules\r\n            // Update the state with the new block rules\r\n            return { ...state, blockRules: action.data };\r\n\r\n        case LmatMachineTranslateActionTypes.translationInfo: // Action to save the translation info\r\n            // Update the state with the new translation info\r\n            const data = {}\r\n\r\n            // Source String Count\r\n            action.sourceStringCount && (data.sourceStringCount = action.sourceStringCount);\r\n            // Source Word Count\r\n            action.sourceWordCount && (data.sourceWordCount = action.sourceWordCount);\r\n            // Source Character Count\r\n            action.sourceCharacterCount && (data.sourceCharacterCount = action.sourceCharacterCount);\r\n\r\n            // Save the translation info like target word count, target character count, translate status, time taken\r\n            if ((action.targetWordCount || action.targetCharacterCount || action.translateStatus || action.timeTaken) && action.provider) {\r\n                data.translateData = {\r\n                    ...(state.translationInfo?.translateData || {}),\r\n                    [action.provider]: {\r\n                        // If the provider already exists, update the existing provider data    \r\n                        ...(state.translationInfo?.translateData?.[action.provider] || {}),\r\n                        // Update the source string count\r\n                        ...(action.targetStringCount && { targetStringCount: action.targetStringCount }),\r\n                        // Update the target word count, target character count, translate status, time taken\r\n                        ...(action.targetWordCount && { targetWordCount: action.targetWordCount }),\r\n                        // Update the target character count\r\n                        ...(action.targetCharacterCount && { targetCharacterCount: action.targetCharacterCount }),\r\n                        // Update the translate status\r\n                        ...(action.translateStatus && { translateStatus: action.translateStatus }),\r\n                        // Update the time taken\r\n                        ...(action.timeTaken && { timeTaken: action.timeTaken })\r\n                    }\r\n                };\r\n            }\r\n\r\n            return { ...state, translationInfo: { ...state.translationInfo, ...data } };\r\n\r\n        case LmatMachineTranslateActionTypes.allowedMetaFields: // Action to save the allowed meta fields\r\n            // Update the state with the new allowed meta fields\r\n            return { ...state, allowedMetaFields: { ...state.allowedMetaFields, [action.id]: { ...(state.allowedMetaFields[action.id] || []), inputType: action.inputType } } };\r\n\r\n        default: // If the action type does not match any case\r\n            return state; // Return the current state unchanged\r\n    }\r\n}\r\n\r\nexport default reducer; // Exporting the reducer as the default export","/**\r\n * Retrieves the translation entries from the given state.\r\n *\r\n * This function extracts translation entries for the title, excerpt, meta fields, and content\r\n * from the provided state object and returns them as an array of translation entry objects.\r\n *\r\n * @param {Object} state - The state object containing translation data.\r\n * @param {Object} state.title - The title object containing source and target translations.\r\n * @param {Object} state.excerpt - The excerpt object containing source and target translations.\r\n * @param {Object} state.metaFields - An object containing meta field translations, where each key is a meta field ID.\r\n * @param {Object} state.content - An object containing content translations, where each key is a content ID.\r\n * @returns {Array<Object>} An array of translation entry objects, each containing the following properties:\r\n *   @property {string} id - The identifier of the translation entry.\r\n *   @property {string} source - The source text of the translation entry.\r\n *   @property {string} type - The type of the translation entry (e.g., 'title', 'excerpt', 'metaFields', 'content').\r\n *   @property {string} translatedData - The target text of the translation entry (default is an empty string if not provided).\r\n */\r\nexport const getTranslationEntry = (state) => {\r\n    // Initialize an empty array to hold translation entries\r\n    const translateEntry = new Array;\r\n\r\n    if (state.title.source) {\r\n        // Push the title translation entry into the array\r\n        translateEntry.push({\r\n            id: 'title', // Identifier for the entry\r\n            source: state.title.source, // Source text for the title\r\n            type: 'title', // Type of the entry\r\n            translatedData: (state.title.translatedData || {}), // translated text for the title, defaulting to an empty string if not provided\r\n        });\r\n    }\r\n\r\n    if (state.excerpt.source) {\r\n        // Push the excerpt translation entry into the array\r\n        translateEntry.push({\r\n            id: 'excerpt', // Identifier for the entry\r\n            source: state.excerpt.source, // Source text for the excerpt\r\n            type: 'excerpt', // Type of the entry\r\n            translatedData: (state.excerpt.translatedData || {}), // translated text for the excerpt, defaulting to an empty string if not provided\r\n        });\r\n    }\r\n\r\n    // Iterate over the metaFields object keys and push each translation entry into the array\r\n    Object.keys(state.metaFields).map(key => {\r\n        translateEntry.push({\r\n            type: 'metaFields', // Type of the entry\r\n            id: key, // Identifier for the meta field\r\n            source: state.metaFields[key].source, // Source text for the meta field\r\n            translatedData: (state.metaFields[key].translatedData || {}), // translated text for the meta field, defaulting to an empty string if not provided\r\n        });\r\n    });\r\n\r\n    // Iterate over the content object keys and push each translation entry into the array\r\n    Object.keys(state.content).map(key => {\r\n        translateEntry.push({\r\n            type: 'content', // Type of the entry\r\n            id: key, // Identifier for the content\r\n            source: state.content[key].source, // Source text for the content\r\n            translatedData: (state.content[key].translatedData || {}), // translated text for the content, defaulting to an empty string if not provided\r\n        });\r\n    });\r\n\r\n    // Return the array of translation entries\r\n    return translateEntry;\r\n};\r\n\r\n/**\r\n * Retrieves the block rules from the given state.\r\n * @param {Object} state - The state object containing translation data.\r\n * @returns {Object} The block rules data.\r\n */\r\nexport const getBlockRules = (state) => {\r\n    return state.blockRules;\r\n}\r\n\r\n/**\r\n * Retrieves the translated string from the given state.\r\n *\r\n * This function extracts the translated string for a given type (title, excerpt, metaFields, or content)\r\n * from the provided state object and returns it.\r\n *\r\n * @param {Object} state - The state object containing translation data.\r\n * @param {string} type - The type of the translation entry (e.g., 'title', 'excerpt', 'metaFields', 'content').\r\n * @param {string} source - The source text of the translation entry.\r\n * @param {string} id - The identifier of the translation entry (optional, used for metaFields and content).\r\n * @param {string} provider - The provider of the translation (optional, used for metaFields and content).\r\n * @returns {string} The translated string for the given type and source, or the original source text if no translation is found.\r\n */\r\nexport const getTranslatedString = (state, type, source, id = null, provider = null) => {\r\n\r\n    // Check if the type is 'title' or 'excerpt' and if the source matches\r\n    if (['title', 'excerpt'].includes(type) && state[type].source === source && state[type].translatedData && state[type].translatedData[provider]) {\r\n        return state[type]?.translatedData[provider] || state[type]?.source; // Return the translatedData if it matches\r\n    }\r\n    // Check if the type is 'metaFields' and if the source matches\r\n    else if (type === 'metaFields' && state.metaFields && state.metaFields[id] && state.metaFields[id].source === source && state.metaFields[id].translatedData && state.metaFields[id].translatedData[provider]) {\r\n        // Return the target text if it exists, otherwise return the source text\r\n        return undefined !== state.metaFields[id]?.translatedData[provider] ? state.metaFields[id]?.translatedData[provider] : state.metaFields[id]?.source;\r\n    }\r\n    // Check if the type is 'content' and if the source matches\r\n    else if (type === 'content' && state.content && state.content[id] && state.content[id].source === source && state.content[id].translatedData && state.content[id].translatedData[provider]) {\r\n        // Return the target text if it exists, otherwise return the source text\r\n        return undefined !== state.content[id]?.translatedData[provider] ? state.content[id]?.translatedData[provider] : state.content[id]?.source;\r\n    }\r\n    // If no matches, return the original source text\r\n    return source;\r\n}\r\n\r\n/**\r\n * Retrieves the translation info from the given state.\r\n * @param {Object} state - The state object containing translation data.\r\n * @returns {Object} The translation info.\r\n */\r\nexport const getTranslationInfo = (state) => {\r\n    return {\r\n        sourceStringCount: state?.translationInfo?.sourceStringCount || 0,\r\n        sourceWordCount: state?.translationInfo?.sourceWordCount || 0,\r\n        sourceCharacterCount: state?.translationInfo?.sourceCharacterCount || 0,\r\n        translateData: state?.translationInfo?.translateData || {}\r\n    };\r\n}\r\n\r\n/** \r\n * Retrieves the allowed meta fields from the given state.\r\n * @param {Object} state - The state object containing translation data.\r\n * @returns {Object} The allowed meta fields.\r\n */\r\nexport const getAllowedMetaFields = (state) => {\r\n    return state.allowedMetaFields || {};\r\n}","/**\r\n * LmatMachineTranslateActionTypes is an object that defines the action types used in the \r\n * automatic translation feature of the application. Each property in this \r\n * object corresponds to a specific action that can be dispatched to the \r\n * global store, allowing the application to manage the state related to \r\n * source and translated content effectively.\r\n */\r\nconst LmatMachineTranslateActionTypes = {\r\n    // Action type for saving the title of the source content\r\n    sourceTitle: 'SAVE_SOURCE_TITLE',\r\n    \r\n    // Action type for saving the title of the translated content\r\n    traslatedTitle: 'SAVE_TRANSLATE_TITLE',\r\n    \r\n    // Action type for saving the excerpt of the source content\r\n    sourceExcerpt: 'SAVE_SOURCE_EXCERPT',\r\n    \r\n    // Action type for saving the excerpt of the translated content\r\n    traslatedExcerpt: 'SAVE_TRANSLATE_EXCERPT',\r\n    \r\n    // Action type for saving the main content of the source\r\n    sourceContent: 'SAVE_SOURCE_CONTENT',\r\n    \r\n    // Action type for saving the main content of the translated content\r\n    traslatedContent: 'SAVE_TRANSLATE_CONTENT',\r\n    \r\n    // Action type for saving the meta fields of the source content\r\n    sourceMetaFields: 'SAVE_SOURCE_META_FIELDS',\r\n    \r\n    // Action type for saving the meta fields of the translated content\r\n    traslatedMetaFields: 'SAVE_TRANSLATE_META_FIELDS',\r\n\r\n    // Action type for saving the block rules\r\n    setBlockRules: 'SET_BLOCK_RULES',\r\n\r\n    // Action type for saving the translatio info of the translated content\r\n    translationInfo: 'SAVE_TRANSLATE_INFO',\r\n\r\n    // Action type for saving the allowed meta fields\r\n    allowedMetaFields: 'ALLOWED_META_FIELDS',\r\n};\r\n\r\nexport default LmatMachineTranslateActionTypes;","import { select } from '@wordpress/data';\r\n\r\nexport const updateTranslateData = ({ provider, sourceLang, targetLang, postId }) => {\r\n    const translateData = select('block-lmatMachineTranslate/translate').getTranslationInfo();\r\n    const totalStringCount = translateData.translateData?.[provider]?.targetStringCount || 0;\r\n    const totalWordCount = translateData.translateData?.[provider]?.targetWordCount || 0;\r\n    const totalCharacterCount = translateData.translateData?.[provider]?.targetCharacterCount || 0;\r\n    const timeTaken = translateData.translateData?.[provider]?.timeTaken || 0;\r\n    const sourceWordCount = translateData?.sourceWordCount || 0;\r\n    const sourceCharacterCount = translateData?.sourceCharacterCount || 0;\r\n    const sourceStringCount = translateData?.sourceStringCount || 0;\r\n    const editorType = lmatPageTranslationGlobal.editor_type;\r\n    const date = new Date().toISOString();\r\n\r\n    const data = { provider, totalStringCount, totalWordCount, totalCharacterCount, editorType, date, sourceStringCount, sourceWordCount, sourceCharacterCount, sourceLang, targetLang, timeTaken, action: lmatPageTranslationGlobal.update_translate_data, update_translation_key: lmatPageTranslationGlobal.update_translation_check, post_id: postId };\r\n\r\n    fetch(lmatPageTranslationGlobal.ajax_url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n            'Accept': 'application/json',\r\n        },\r\n        body: new URLSearchParams(data)\r\n    }).then(response => response.json()).then(data => {\r\n        console.log(data.data.message);\r\n    }).catch(error => {\r\n        console.error(error);\r\n    });\r\n}","// extracted by mini-css-extract-plugin\nexport {};","import { sprintf, __ } from \"@wordpress/i18n\";\r\nimport Providers from \"./providers.js\";\r\nimport TranslateService from \"../component/TranslateProvider/index.js\";\r\n\r\nconst SettingModalBody = (props) => {\r\n    const ServiceProviders = TranslateService();\r\n\r\n    return (\r\n        <div className=\"lmat-page-translation-setting-modal-body\">\r\n            <div className=\"lmat-page-translation-setting-modal-notice-wrapper\">\r\n            </div>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Translate</th>\r\n                        <th>Docs</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Object.keys(ServiceProviders).map((provider) => (\r\n                        <Providers\r\n                            key={provider}\r\n                            {...props}\r\n                            Service={provider}\r\n                        />\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SettingModalBody;\r\n","import { __ } from \"@wordpress/i18n\";\r\n\r\nconst SettingModalFooter = (props) => {\r\n\r\n    const { targetLangName, postType, sourceLangName, setSettingVisibility } = props;\r\n\r\n    return (\r\n        <div className=\"modal-footer\">\r\n            <p className=\"lmat-page-translation-error-message\" style={{ marginBottom: '.5rem' }}>\r\n                {sprintf(\r\n                    __(\"This will replace your current %(postType)s with a %(target)s translation of the original %(source)s content.\", 'automatic-translations-for-polylang-pro'),\r\n                    { postType: postType, source: sourceLangName, target: targetLangName }\r\n                )}\r\n            </p>\r\n            <button className=\"lmat-page-translation-setting-close button button-primary\" onClick={() => setSettingVisibility(false)}>{__(\"Close\", 'automatic-translations-for-polylang-pro')}</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SettingModalFooter;\r\n","import { __ } from \"@wordpress/i18n\";\r\n\r\nconst SettingModalHeader = ({ setSettingVisibility }) => {\r\n    return (\r\n        <div className=\"modal-header\">\r\n            <h2>{__(\"Step 1 - Select Translation Provider\", 'automatic-translations-for-polylang-pro')}</h2>\r\n            <span className=\"close\" onClick={() => setSettingVisibility(false)}>&times;</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SettingModalHeader;\r\n","import ReactDOM from \"react-dom/client\";\r\nimport { useEffect, useState } from \"@wordpress/element\";\r\nimport PopStringModal from \"../popupStringModal/index.js\";\r\nimport googleLanguage from \"../component/TranslateProvider/google/google-language.js\";\r\nimport SettingModalHeader from \"./header.js\";\r\nimport SettingModalBody from \"./body.js\";\r\nimport SettingModalFooter from \"./footer.js\";\r\nimport { __ , sprintf } from \"@wordpress/i18n\";\r\nimport ErrorModalBox from \"../component/ErrorModalBox/index.js\";\r\n\r\nconst SettingModal = (props) => {\r\n    const [targetBtn, setTargetBtn] = useState({});\r\n    const [modalRender, setModalRender] = useState(0);\r\n    const [settingVisibility, setSettingVisibility] = useState(false);\r\n    const sourceLang = lmatPageTranslationGlobal.source_lang;\r\n    const targetLang = props.targetLang;\r\n    const sourceLangName = lmatPageTranslationGlobal.languageObject[sourceLang]['name'];\r\n    const targetLangName = lmatPageTranslationGlobal.languageObject[targetLang]['name'];\r\n    const imgFolder = lmatPageTranslationGlobal.lmat_url + 'Admin/Assets/images/';\r\n    const googleSupport = googleLanguage().includes(targetLang === 'zh' ? lmatPageTranslationGlobal.languageObject['zh']?.locale.replace('_', '-') : targetLang);\r\n    const [serviceModalErrors, setServiceModalErrors] = useState({});\r\n    const [errorModalVisibility, setErrorModalVisibility] = useState(false);\r\n    const [chromeAiBtnDisabled, setChromeAiBtnDisabled] = useState(false);\r\n\r\n    const openModalOnLoadHandler = (e) => {\r\n        e.preventDefault();\r\n        const btnElement = e.target;\r\n        const visibility = btnElement.dataset.value;\r\n\r\n        if (visibility === 'yes') {\r\n            setSettingVisibility(true);\r\n        }\r\n\r\n        btnElement.closest('#lmat-page-translation-modal-open-warning-wrapper').remove();\r\n    }\r\n\r\n    const closeErrorModal = () => {\r\n        setErrorModalVisibility(false);\r\n    }\r\n\r\n    const openErrorModalHandler = (service) => {\r\n        setSettingVisibility(false);\r\n        setErrorModalVisibility(service);\r\n    }\r\n\r\n    /**\r\n     * useEffect hook to set settingVisibility.\r\n     * Triggers the setSettingVisibility only when user click on meta field Button.\r\n    */\r\n    useEffect(() => {\r\n        const firstRenderBtns = document.querySelectorAll('#lmat-page-translation-modal-open-warning-wrapper .modal-content div[data-value]');\r\n        const metaFieldBtn = document.querySelector(props.translateWrpSelector);\r\n\r\n        if (metaFieldBtn) {\r\n            metaFieldBtn.addEventListener('click', (e) => {\r\n                e.preventDefault();\r\n                setSettingVisibility(prev => !prev);\r\n            });\r\n        }\r\n\r\n        firstRenderBtns.forEach(ele => {\r\n            if (ele) {\r\n                ele.addEventListener('click', openModalOnLoadHandler);\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    /**\r\n     * useEffect hook to check if the local AI translator is supported.\r\n     */\r\n    useEffect(() => {\r\n        if(settingVisibility){\r\n            if(!googleSupport){\r\n                setServiceModalErrors(prev => ({\r\n                    ...prev,\r\n                    google: {\r\n                        message: \"<p style={{ fontSize: '1rem', color: '#ff4646' }}>\"+sprintf(\r\n                            __(\"Google Translate does not support the target language: %s.\", 'linguator-multilingual-ai-translation'),\r\n                            \"<strong>\"+targetLangName+\"</strong>\"\r\n                        )+\"</p>\",\r\n                        Title: __(\"Google Translate\", 'linguator-multilingual-ai-translation')\r\n                    }\r\n                }));\r\n            }\r\n        }\r\n    }, [settingVisibility]);\r\n\r\n    /**\r\n     * useEffect hook to handle displaying the modal and rendering the PopStringModal component.\r\n     */\r\n    useEffect(() => {\r\n        const btn = targetBtn;\r\n        const service = btn.dataset && btn.dataset.service;\r\n        const serviceLabel = btn.dataset && btn.dataset.serviceLabel;\r\n        const postId = props.postId;\r\n\r\n        const parentWrp = document.getElementById(\"lmat_page_translation_strings_model\");\r\n\r\n        if (parentWrp) {\r\n            // Store root instance in a ref to avoid recreating it\r\n            if (!parentWrp._reactRoot) {\r\n                parentWrp._reactRoot = ReactDOM.createRoot(parentWrp);\r\n            }\r\n\r\n            if (modalRender) {\r\n                parentWrp._reactRoot.render(<PopStringModal\r\n                    currentPostId={props.currentPostId}\r\n                    postId={postId}\r\n                    service={service}\r\n                    serviceLabel={serviceLabel}\r\n                    sourceLang={sourceLang}\r\n                    targetLang={targetLang}\r\n                    modalRender={modalRender}\r\n                    pageTranslate={props.pageTranslate}\r\n                    postDataFetchStatus={props.postDataFetchStatus}\r\n                    fetchPostData={props.fetchPostData}\r\n                    translatePost={props.translatePost}\r\n                    contentLoading={props.contentLoading}\r\n                    updatePostDataFetch={props.updatePostDataFetch}\r\n                    stringModalBodyNotice={props.stringModalBodyNotice}\r\n                />);\r\n            }\r\n        }\r\n    }, [props.postDataFetchStatus, modalRender]);\r\n\r\n    /**\r\n     * Function to handle fetching content based on the target button clicked.\r\n     * Sets the target button and updates the fetch status to true.\r\n     * @param {Event} e - The event object representing the button click.\r\n     */\r\n    const fetchContent = async (e) => {\r\n        let targetElement = !e.target.classList.contains('lmat-page-translation-service-btn') ? e.target.closest('.lmat-page-translation-service-btn') : e.target;\r\n\r\n        if (!targetElement) {\r\n            return;\r\n        }\r\n\r\n        setSettingVisibility(false);\r\n        \r\n        setModalRender(prev => prev + 1);\r\n        setTargetBtn(targetElement);\r\n    };\r\n\r\n    const handleSettingVisibility = (visibility) => {\r\n        setSettingVisibility(visibility);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {errorModalVisibility && serviceModalErrors[errorModalVisibility] &&\r\n                <ErrorModalBox onClose={closeErrorModal} {...serviceModalErrors[errorModalVisibility]}/>\r\n            }\r\n            {settingVisibility &&\r\n                <div className=\"modal-container\" style={{ display: settingVisibility ? 'flex' : 'none' }}>\r\n                    <div className=\"lmat-page-translation-settings modal-content\">\r\n                        <SettingModalHeader\r\n                            setSettingVisibility={handleSettingVisibility}\r\n                            postType={props.postType}\r\n                            sourceLangName={sourceLangName}\r\n                            targetLangName={targetLangName}\r\n                        />\r\n                        <SettingModalBody\r\n                            googleDisabled={!googleSupport}\r\n                            fetchContent={fetchContent}\r\n                            imgFolder={imgFolder}\r\n                            targetLangName={targetLangName}\r\n                            postType={props.postType}\r\n                            sourceLangName={sourceLangName}\r\n                            openErrorModalHandler={openErrorModalHandler}\r\n                        />\r\n                        <SettingModalFooter\r\n                            targetLangName={targetLangName}\r\n                            postType={props.postType}\r\n                            sourceLangName={sourceLangName}\r\n                            setSettingVisibility={handleSettingVisibility}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SettingModal;","import TranslateService from \"../component/TranslateProvider/index.js\";\r\n\r\nconst Providers = (props) => {\r\n    const service = props.Service;\r\n    const buttonDisable = props[service + \"Disabled\"];\r\n    const ActiveService = TranslateService({ Service: service, [service + \"ButtonDisabled\"]: buttonDisable, openErrorModalHandler: props.openErrorModalHandler });\r\n\r\n    const serviceId = service.replace(/([A-Z])/g, '-$1').toLowerCase().replace(/[^a-z0-9-]/g, '');\r\n    const btnId = `lmat-page-translation-${serviceId}-btn`;\r\n\r\n    return (\r\n<tr>\r\n<td className=\"lmat-page-translation-provider-name\">\r\n  <img src={`${props.imgFolder}${ActiveService.Logo}`} alt={ActiveService.title} />\r\n  <span>{ActiveService.title}</span>\r\n</td>\r\n<td>\r\n  {ActiveService.ButtonDisabled ? ActiveService.ErrorMessage : (\r\n    <div\r\n      id={btnId}\r\n      onClick={props.fetchContent}\r\n      className=\"lmat-page-translation-service-btn button button-primary\"\r\n      data-service={service}\r\n      data-service-label={ActiveService.ServiceLabel}\r\n    >\r\n      {ActiveService.SettingBtnText}\r\n    </div>\r\n  )}\r\n</td>\r\n<td>\r\n  <a href={ActiveService.Docs} target=\"_blank\" rel=\"noopener noreferrer\" className=\"lmat-page-translation-doc-icon\">\r\n    <svg width=\"9\" height=\"12\" viewBox=\"0 0 9 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path d=\"M2.17607 6.20533H6.82393V5.53867H2.17607V6.20533ZM2.17607 8.05133H6.82393V7.38467H2.17607V8.05133ZM2.17607 9.898H4.89536V9.23133H2.17607V9.898ZM1.03821 12C0.7425 12 0.495643 11.8973 0.297643 11.692C0.0996427 11.4867 0.000428571 11.2304 0 10.9233V1.07667C0 0.77 0.0992142 0.514 0.297643 0.308667C0.496071 0.103333 0.743143 0.000444444 1.03886 0H6.10714L9 3V10.9233C9 11.23 8.901 11.4862 8.703 11.692C8.505 11.8978 8.25771 12.0004 7.96114 12H1.03821ZM5.78571 3.33333V0.666667H1.03886C0.939857 0.666667 0.849 0.709333 0.766286 0.794666C0.683571 0.88 0.642429 0.974 0.642857 1.07667V10.9233C0.642857 11.0256 0.684 11.1196 0.766286 11.2053C0.848571 11.2911 0.939214 11.3338 1.03821 11.3333H7.96179C8.06036 11.3333 8.151 11.2907 8.23371 11.2053C8.31643 11.12 8.35757 11.0258 8.35714 10.9227V3.33333H5.78571Z\" fill=\"#6F6F6F\" />\r\n    </svg>\r\n  </a>\r\n</td>\r\n</tr>\r\n    );\r\n}\r\n\r\nexport default Providers;\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport FilterTargetContent from \"../component/FilterTargetContent/index.js\";\r\nimport { __ } from \"@wordpress/i18n\";\r\nimport { select } from \"@wordpress/data\";\r\nimport { Fragment } from \"@wordpress/element\";\r\nimport TranslateService from \"../component/TranslateProvider/index.js\";\r\n\r\nconst StringPopUpBody = (props) => {\r\n\r\n    const { service: service } = props;\r\n    const translateContent = select(\"block-lmatMachineTranslate/translate\").getTranslationEntry();\r\n    const StringModalBodyNotice = props.stringModalBodyNotice;\r\n\r\n    useEffect(() => {\r\n\r\n        if (['yandex', 'google'].includes(props.service)) {\r\n            document.documentElement.setAttribute('translate', 'no');\r\n            document.body.classList.add('notranslate');\r\n        }\r\n\r\n        /**\r\n         * Calls the translate service provider based on the service type.\r\n         * For example, it can call services like yandex Translate.\r\n        */\r\n        const service = props.service;\r\n        const id = `lmat_page_translation_${service}_translate_element`;\r\n\r\n        const translateContent = wp.data.select('block-lmatMachineTranslate/translate').getTranslationEntry();\r\n\r\n        if (translateContent.length > 0 && props.postDataFetchStatus) {\r\n            const ServiceSetting = TranslateService({ Service: service });\r\n            ServiceSetting.Provider({ sourceLang: props.sourceLang, targetLang: props.targetLang, translateStatusHandler: props.translateStatusHandler, ID: id, translateStatus: props.translateStatus, modalRenderId: props.modalRender, destroyUpdateHandler: props.updateDestroyHandler });\r\n        }\r\n    }, [props.modalRender, props.postDataFetchStatus]);\r\n\r\n    return (\r\n        <div className=\"modal-body\">\r\n            {translateContent.length > 0 && props.postDataFetchStatus ?\r\n                <>\r\n                    {StringModalBodyNotice && <div className=\"lmat-page-translation-body-notice-wrapper\"><StringModalBodyNotice /></div>}\r\n                    <div className=\"lmat_page_translation_translate_progress\" key={props.modalRender}>{__(\"Automatic translation is in progress....\", 'autopoly-ai-translation-for-polylang')}<br />{__(\"It will take few minutes, enjoy ☕ coffee in this time!\", 'autopoly-ai-translation-for-polylang')}<br /><br />{__(\"Please do not leave this window or browser tab while translation is in progress...\", 'autopoly-ai-translation-for-polylang')}</div>\r\n                    <div className={`translator-widget ${service}`} style={{ display: 'flex' }}>\r\n                        <h3 className=\"choose-lang\">{TranslateService({ Service: props.service }).heading} <span className=\"dashicons-before dashicons-translation\"></span></h3>\r\n\r\n                        <div className={`lmat_page_translation_translate_element_wrapper ${props.translateStatus ? 'translate-completed' : ''}`}>\r\n                            <div id={`lmat_page_translation_${props.service}_translate_element`}></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"lmat_page_translation_string_container\">\r\n                        <table className=\"scrolldown\" id=\"stringTemplate\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"notranslate\">{__(\"S.No\", 'autopoly-ai-translation-for-polylang')}</th>\r\n                                    <th className=\"notranslate\">{__(\"Source Text\", 'autopoly-ai-translation-for-polylang')}</th>\r\n                                    <th className=\"notranslate\">{__(\"Translation\", 'autopoly-ai-translation-for-polylang')}</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {props.postDataFetchStatus &&\r\n                                    <>\r\n                                        {translateContent.map((data, index) => {\r\n                                            return (\r\n                                                <Fragment key={index + props.translatePendingStatus}>\r\n                                                    {undefined !== data.source && data.source.trim() !== '' &&\r\n                                                        <>\r\n                                                            <tr key={index + 'tr' + props.translatePendingStatus}>\r\n                                                                <td>{index + 1}</td>\r\n                                                                <td data-source=\"source_text\">{data.source}</td>\r\n                                                                {!props.translatePendingStatus ?\r\n                                                                    <td className=\"translate\" data-translate-status=\"translated\" data-key={data.id}data-string-type={data.type}>{data.translatedData[props.service]}</td> :\r\n                                                                    <td className=\"translate\" translate=\"yes\" data-key={data.id} data-string-type={data.type}>\r\n                                                                        <FilterTargetContent service={props.service} content={data.source} contentKey={data.id} />\r\n                                                                    </td>\r\n                                                                }\r\n                                                            </tr>\r\n                                                        </>\r\n                                                    }\r\n                                                </Fragment>\r\n                                            );\r\n                                        })\r\n                                        }\r\n                                    </>\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </> :\r\n                props.postDataFetchStatus ?\r\n                    <p>{__('No strings are available for translation', 'autopoly-ai-translation-for-polylang')}</p> :\r\n\r\n                    <div className=\"lmat-page-translation-skeleton-loader-wrapper\">\r\n                        <div className=\"translate-widget\">\r\n                            <div className=\"lmat-page-translation-skeleton-loader-mini\"></div>\r\n                            <div className=\"lmat-page-translation-skeleton-loader-mini\"></div>\r\n                        </div>\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"notranslate\">{__(\"S.No\", 'autopoly-ai-translation-for-polylang')}</th>\r\n                                    <th className=\"notranslate\">{__(\"Source Text\", 'autopoly-ai-translation-for-polylang')}</th>\r\n                                    <th className=\"notranslate\">{__(\"Translation\", 'autopoly-ai-translation-for-polylang')}</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {[...Array(10)].map((_, index) => {\r\n                                    return (\r\n                                        <tr key={index}>\r\n                                            <td><div className=\"lmat-page-translation-skeleton-loader-mini\"></div></td>\r\n                                            <td><div className=\"lmat-page-translation-skeleton-loader-mini\"></div></td>\r\n                                            <td><div className=\"lmat-page-translation-skeleton-loader-mini\"></div></td>\r\n                                        </tr>\r\n                                    );\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StringPopUpBody;\r\n","import StringPopUpNotice from \"./notice.js\";\r\nimport { sprintf, __ } from \"@wordpress/i18n\";\r\nimport FormatNumberCount from \"../component/FormateNumberCount/index.js\";\r\n\r\nconst StringPopUpFooter = (props) => {\r\n\r\n    return (\r\n        <div className=\"modal-footer\" key={props.modalRender}>\r\n            {!props.translatePendingStatus && <StringPopUpNotice className=\"lmat_page_translation_string_count\"><p>{__('Wahooo! You have saved your valuable time via auto translating', 'autopoly-ai-translation-for-polylang')} <strong><FormatNumberCount number={props.characterCount} /></strong> {__('characters using', 'autopoly-ai-translation-for-polylang')} <strong>{props.serviceLabel}</strong>.{__('Please share your feedback —', 'autopoly-ai-translation-for-polylang')}<a href=\"https://wordpress.org/support/plugin/automatic-translations-for-polylang/reviews/#new-post\" target=\"_blank\" rel=\"noopener\" style={{color: 'yellow'}}>{__('leave a quick review', 'autopoly-ai-translation-for-polylang')}</a>!</p></StringPopUpNotice>}\r\n            <div className=\"save_btn_cont\">\r\n                <button className=\"notranslate save_it button button-primary\" disabled={props.translatePendingStatus} onClick={props.updatePostData}>{__(\"Update Content\", 'autopoly-ai-translation-for-polylang')}</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StringPopUpFooter;","import { __ } from \"@wordpress/i18n\";\r\nconst StringPopUpHeader = (props) => {\r\n\r\n    /**\r\n     * Function to close the popup modal.\r\n     */\r\n    const closeModal = () => {\r\n        props.setPopupVisibility(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal-header\" key={props.modalRender}>\r\n            <span className=\"close\" onClick={closeModal}>&times;</span>\r\n            <h2 className=\"notranslate\">{__(\"Step 2 - Start Automatic Translation Process\", 'autopoly-ai-translation-for-polylang')}</h2>\r\n            <div className=\"save_btn_cont\">\r\n                <button className=\"notranslate save_it button button-primary\" disabled={props.translatePendingStatus} onClick={props.updatePostData}>{__(\"Update Content\", 'autopoly-ai-translation-for-polylang')}</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StringPopUpHeader;","import { useEffect, useState } from \"@wordpress/element\";\r\nimport { updateTranslateData } from \"../helper/index.js\";\r\nimport { select } from \"@wordpress/data\";\r\nimport StringPopUpHeader from \"./header.js\";\r\nimport StringPopUpBody from \"./body.js\";\r\nimport StringPopUpFooter from \"./footer.js\";\r\n\r\nconst popStringModal = (props) => {\r\n\r\n    let selectedService = props.service;\r\n\r\n    const translateData = select('block-lmatMachineTranslate/translate').getTranslationInfo().translateData[selectedService] || false;\r\n    const translateStatus=translateData?.translateStatus || false;\r\n\r\n    const [popupVisibility, setPopupVisibility] = useState(true);\r\n    const [refPostData, setRefPostData] = useState('');\r\n    const [translatePending, setTranslatePending] = useState(true);\r\n    const [characterCount, setCharacterCount] = useState(translateData?.targetCharacterCount || 0);\r\n    const [onDestroy, setOnDestroy] = useState([]);\r\n\r\n    const updateDestroyHandler = (callback) => {\r\n        setOnDestroy(prev => [...prev, callback]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!popupVisibility){\r\n            if (onDestroy.length > 0) {\r\n                onDestroy.forEach(callback => {\r\n                    if (typeof callback === 'function') {\r\n                        callback();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [popupVisibility, onDestroy]);\r\n\r\n    /**\r\n     * Returns the label for the service provider.\r\n     * @returns {string} The label for the service provider.\r\n     */ \r\n    const serviceLabel = () => {\r\n        const serviceProvider = props.service;\r\n\r\n        if (serviceProvider === 'localAiTranslator') {\r\n            return 'Chrome AI Translator';\r\n        }else{\r\n            return serviceProvider.replace(/^\\w/, c => c.toUpperCase()) + ' Translate';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fetches the post data.\r\n     */\r\n    useEffect(() => {\r\n        if (!props.postDataFetchStatus) {\r\n                props.fetchPostData({ postId: props.postId, sourceLang: props.sourceLang, targetLang: props.targetLang, updatePostDataFetch: props.updatePostDataFetch, refPostData: data => setRefPostData(data), updateDestroyHandler: updateDestroyHandler });\r\n        }\r\n    }, [props.postDataFetchStatus, props.modalRender])\r\n\r\n    /**\r\n     * Updates the post content data.\r\n     * @param {string} data - The data to set as the post content.\r\n     */\r\n    const updatePostContentHandler = (data) => {\r\n        setRefPostData(data);\r\n    }\r\n\r\n    /**\r\n     * Updates the fetch state.\r\n     * @param {boolean} state - The state to update the fetch with.\r\n     */\r\n    const setPopupVisibilityHandler = (state) => {\r\n\r\n        if (props.service === 'yandex') {\r\n            document.querySelector('#lmat_page_translation_yandex_translate_element #yt-widget .yt-button__icon.yt-button__icon_type_right')?.click();\r\n        }\r\n\r\n        setTranslatePending(true);\r\n        setPopupVisibility(false);\r\n    }\r\n\r\n    const translateStatusHandler = (status) => {\r\n        let service = props.service;\r\n\r\n        const characterCount = select('block-lmatMachineTranslate/translate').getTranslationInfo().translateData[service]?.targetCharacterCount || 0;\r\n        setCharacterCount(characterCount);\r\n        setTranslatePending(status);\r\n    }\r\n\r\n    const updatePostDataHandler = () => {\r\n        const postContent = refPostData;\r\n        const modalClose = () => setPopupVisibility(false);\r\n        let service=props.service;\r\n\r\n        props.translatePost({ postContent: postContent, modalClose: modalClose, service: service });\r\n        props.pageTranslate(true);\r\n        updateTranslateData({ provider: service, sourceLang: props.sourceLang, targetLang: props.targetLang, postId: props.currentPostId });\r\n    }\r\n\r\n    useEffect(() => {\r\n        setPopupVisibility(true);\r\n\r\n        if (translateStatus) {\r\n            setCharacterCount(translateData?.targetCharacterCount || 0);\r\n            setTranslatePending(false);\r\n        }\r\n\r\n        setTimeout(() => {\r\n            const stringModal = document.querySelector('.lmat_page_translation_string_container');\r\n            if (stringModal) {\r\n                stringModal.scrollTop = 0\r\n            };\r\n        })\r\n    }, [props.modalRender])\r\n\r\n    return (\r\n        <> {popupVisibility &&\r\n            <div id={`lmat-page-translation-${props.service}-strings-modal`} className=\"modal-container\" style={{ display: popupVisibility ? 'flex' : 'none' }} data-render-id={props.modalRender}>\r\n                <div className=\"modal-content\">\r\n                    <StringPopUpHeader\r\n                        modalRender={props.modalRender}\r\n                        setPopupVisibility={setPopupVisibilityHandler}\r\n                        postContent={refPostData}\r\n                        translatePendingStatus={translatePending}\r\n                        pageTranslate={props.pageTranslate}\r\n                        service={props.service}\r\n                        serviceLabel={serviceLabel()}\r\n                        updatePostData={updatePostDataHandler}\r\n                        characterCount={characterCount}\r\n                    />\r\n                    <StringPopUpBody {...props}\r\n                        updatePostContent={updatePostContentHandler}\r\n                        contentLoading={props.contentLoading}\r\n                        postDataFetchStatus={props.postDataFetchStatus}\r\n                        translatePendingStatus={translatePending}\r\n                        service={props.service}\r\n                        sourceLang={props.sourceLang}\r\n                        targetLang={props.targetLang}\r\n                        translateStatusHandler={translateStatusHandler}\r\n                        modalRender={props.modalRender}\r\n                        translateStatus={translateStatus}\r\n                        stringModalBodyNotice={props.stringModalBodyNotice}\r\n                        updateDestroyHandler={updateDestroyHandler}\r\n                    />\r\n                    <StringPopUpFooter\r\n                        modalRender={props.modalRender}\r\n                        setPopupVisibility={setPopupVisibilityHandler}\r\n                        postContent={refPostData}\r\n                        translatePendingStatus={translatePending}\r\n                        pageTranslate={props.pageTranslate}\r\n                        service={props.service}\r\n                        serviceLabel={serviceLabel()}\r\n                        updatePostData={updatePostDataHandler}\r\n                        characterCount={characterCount}\r\n                    />\r\n                </div>\r\n            </div>\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default popStringModal;","const StringPopUpNotice = (props) => {\r\n    return (\r\n        <div className={`notice inline notice-info is-dismissible ${props.className}`}>\r\n            {Array.isArray(props.children) ? props.children.join(' ') : props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StringPopUpNotice;","import { select, dispatch } from \"@wordpress/data\";\r\n\r\nconst ElementorSaveSource = (content) => {\r\n\r\n    const AllowedMetaFields = select('block-lmatMachineTranslate/translate').getAllowedMetaFields();\r\n\r\n    const storeMetaFields = (metaFields) => {\r\n        Object.keys(metaFields).forEach(metaKey => {\r\n            if(Object.keys(AllowedMetaFields).includes(metaKey) && AllowedMetaFields[metaKey].inputType === 'string'){\r\n                if('' !== metaFields[metaKey][0] && undefined !== metaFields[metaKey][0]){\r\n                    dispatch('block-lmatMachineTranslate/translate').metaFieldsSaveSource(metaKey, metaFields[metaKey][0]);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    const loopCallback=(callback, loop, index)=>{\r\n        callback(loop[index], index);\r\n\r\n        index++;\r\n\r\n        if(index < loop.length){\r\n            loopCallback(callback, loop, index);\r\n        }\r\n    }\r\n\r\n    const translateContent=(ids,value)=>{\r\n        if(typeof value === 'string' && value.trim() !== '' && ids.length > 0){\r\n            const uniqueKey = ids.join('_lmat_page_translation_');\r\n\r\n            if(value && '' !== value){  \r\n                dispatch('block-lmatMachineTranslate/translate').contentSaveSource(uniqueKey, value);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Define a list of properties to exclude\r\n    const cssProperties = [\r\n        'content_width', 'title_size', 'font_size', 'margin', 'padding', 'background', 'border', 'color', 'text_align',\r\n        'font_weight', 'font_family', 'line_height', 'letter_spacing', 'text_transform', 'border_radius', 'box_shadow',\r\n        'opacity', 'width', 'height', 'display', 'position', 'z_index', 'visibility', 'align', 'max_width', 'content_typography_typography', 'flex_justify_content', 'title_color', 'description_color', 'email_content'\r\n    ];\r\n\r\n    const substringsToCheck = ['title', 'description', 'editor', 'text', 'content', 'label'];\r\n\r\n    const storeWidgetStrings = (element, index, ids=[]) => {\r\n        const settings = element.settings;\r\n        ids.push(index);\r\n\r\n        // Check if settings is an object\r\n        if (typeof settings === 'object' && settings !== null && Object.keys(settings).length > 0) {\r\n            // Define the substrings to check for translatable content\r\n\r\n            const keysLoop= (key, index)=>{\r\n                if (cssProperties.some(substring => key.toLowerCase().includes(substring))) {\r\n                    return; // Skip this property and continue to the next one\r\n                }\r\n\r\n                if (substringsToCheck.some(substring => key.toLowerCase().includes(substring)) &&\r\n                    typeof settings[key] === 'string' && settings[key].trim() !== '') {\r\n                    translateContent([...ids, 'settings', key],settings[key]);\r\n                }\r\n\r\n                if(Array.isArray(settings[key]) && settings[key].length > 0){\r\n                    const settingsLoop=(item, index)=>{\r\n                        if(typeof item === 'object' && item !== null){\r\n                            const settingsItemsLoop= (repeaterKey)=>{\r\n\r\n                                if (cssProperties.includes(repeaterKey.toLowerCase())) {\r\n                                    return; // Skip this property\r\n                                }\r\n\r\n                                if(substringsToCheck.some(substring => repeaterKey.toLowerCase().includes(substring)) &&\r\n                                    typeof item[repeaterKey] === 'string' && item[repeaterKey].trim() !== '') {\r\n                                    translateContent([...ids, 'settings', key, index, repeaterKey],item[repeaterKey]);\r\n                                }\r\n                            }\r\n\r\n                            loopCallback(settingsItemsLoop, Object.keys(item), 0);\r\n                        }\r\n                    }\r\n\r\n                    loopCallback(settingsLoop, settings[key], 0);\r\n                }\r\n            }\r\n    \r\n            loopCallback(keysLoop, Object.keys(settings), 0);\r\n        }\r\n\r\n        // If there are nested elements, process them recursively\r\n        if (element.elements && Array.isArray(element.elements) && element.elements.length > 0) {\r\n            const runLoop=(childElement, index)=>{\r\n                storeWidgetStrings(childElement, index, [...ids, 'elements']);\r\n            }\r\n\r\n            loopCallback(runLoop, element.elements, 0);\r\n        }\r\n    }\r\n\r\n    if(content.widgetsContent && content.widgetsContent.length > 0){\r\n        const runLoop= (element, index)=>{\r\n            storeWidgetStrings(element, index, []);\r\n        }\r\n\r\n        loopCallback(runLoop, content.widgetsContent, 0);\r\n    }\r\n\r\n    storeMetaFields(content.metaFields);\r\n}\r\n\r\nexport default ElementorSaveSource;","import FilterBlockNestedAttr from \"../../component/FilterNestedAttr/index.js\";\r\nimport { dispatch, select } from \"@wordpress/data\";\r\n\r\n/**\r\n * Filters and translates attributes of a block.\r\n * \r\n * @param {string} blockId - The ID of the block.\r\n * @param {Object} blockAttr - The attributes of the block.\r\n * @param {Object} filterAttr - The attributes to filter.\r\n */\r\nconst filterTranslateAttr = (blockId, blockAttr, filterAttr) => {\r\n\r\n    const filterAttrArr = Object.values(filterAttr);\r\n\r\n    /**\r\n     * Saves translated attributes based on the provided ID array and filter attribute object.\r\n     * \r\n     * @param {Array} idArr - The array of IDs.\r\n     * @param {Object} filterAttrObj - The filter attribute object.\r\n     */\r\n    const saveTranslatedAttr = (idArr, filterAttrObj) => {\r\n       \r\n        if (true === filterAttrObj) {\r\n            const newIdArr = new Array(...idArr);\r\n            const childIdArr = new Array();\r\n\r\n            let dynamicBlockAttr = blockAttr;\r\n            let uniqueId = blockId;\r\n\r\n            newIdArr.forEach(key => {\r\n                childIdArr.push(key);\r\n                uniqueId += `lmatMachineTranslate${key}`;\r\n                dynamicBlockAttr = dynamicBlockAttr[key];\r\n            });\r\n\r\n            let blockAttrContent = dynamicBlockAttr;\r\n\r\n            if(blockAttrContent instanceof wp.richText.RichTextData) {\r\n                blockAttrContent=blockAttrContent.originalHTML;\r\n            }\r\n          \r\n            if (undefined !== blockAttrContent && blockAttrContent.trim() !== '') {\r\n                \r\n                let filterKey = uniqueId.replace(/[^\\p{L}\\p{N}]/gu, '');\r\n\r\n                if (!/[\\p{L}\\p{N}]/gu.test(blockAttrContent)) {\r\n                    return false;\r\n                }\r\n\r\n                dispatch('block-lmatMachineTranslate/translate').contentSaveSource(filterKey, blockAttrContent);\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        FilterBlockNestedAttr(idArr,filterAttrObj,blockAttr,saveTranslatedAttr);\r\n    }\r\n\r\n    filterAttrArr.forEach(data => {\r\n        Object.keys(data).forEach(key => {\r\n            const idArr = new Array(key);\r\n            saveTranslatedAttr(idArr, data[key]);\r\n        });\r\n    });\r\n}\r\n/**\r\n * Retrieves the translation string for a block based on block rules and applies translation.\r\n * \r\n * @param {Object} block - The block to translate.\r\n * @param {Object} blockRules - The rules for translating the block.\r\n */\r\nconst getTranslateString = (block, blockRules) => {\r\n    const blockTranslateName = Object.keys(blockRules.LmatBlockParseRules);\r\n\r\n    if (!blockTranslateName.includes(block.name)) {\r\n        return;\r\n    }\r\n\r\n    filterTranslateAttr(block.clientId, block.attributes, blockRules['LmatBlockParseRules'][block.name]);\r\n}\r\n\r\n/**\r\n * Recursively processes child block attributes for translation.\r\n * \r\n * @param {Array} blocks - The array of blocks to translate.\r\n * @param {Object} blockRules - The rules for translating the blocks.\r\n */\r\nconst childBlockAttributesContent = (blocks, blockRules) => {\r\n    blocks.forEach(block => {\r\n        getTranslateString(block, blockRules);\r\n        if (block.innerBlocks) {\r\n            childBlockAttributesContent(block.innerBlocks, blockRules);\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Processes the attributes of a block for translation.\r\n * \r\n * @param {Object} parseBlock - The block to parse for translation.\r\n * @param {Object} blockRules - The rules for translating the block.\r\n */\r\nconst blockAttributeContent = (parseBlock, blockRules) => {\r\n    Object.values(parseBlock).forEach(block => {\r\n        getTranslateString(block, blockRules);\r\n        if (block.innerBlocks) {\r\n            childBlockAttributesContent(block.innerBlocks, blockRules);\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Saves the translation for a block based on its attributes.\r\n * \r\n * @param {Object} block - The block to save translation for.\r\n * @param {Object} blockRules - The rules for translating the block.\r\n */\r\nconst GutenbergBlockSaveSource = (block, blockRules) => {\r\n\r\n    const AllowedMetaFields = select('block-lmatMachineTranslate/translate').getAllowedMetaFields();\r\n\r\n    Object.keys(block).forEach(key => {\r\n        if (key === 'content') {\r\n            blockAttributeContent(block[key], blockRules);\r\n        }else if(key === 'metaFields'){\r\n            Object.keys(block[key]).forEach(metaKey => {\r\n                // Store meta fields\r\n                if(Object.keys(AllowedMetaFields).includes(metaKey) && AllowedMetaFields[metaKey].inputType === 'string'){\r\n                    if('' !== block[key][metaKey][0] && undefined !== block[key][metaKey][0]){\r\n                        dispatch('block-lmatMachineTranslate/translate').metaFieldsSaveSource(metaKey, block[key][metaKey][0]);\r\n                    }\r\n                }\r\n            });\r\n\r\n            // Store ACF fields\r\n            if(window.acf){\r\n                acf.getFields().forEach(field => {\r\n                    if(field.data && AllowedMetaFields[field.data.key]){\r\n                        const name = field.data.name;\r\n                        const currentValue=acf.getField(field.data.key)?.val();\r\n\r\n                        if(block[key] && block[key][name]){\r\n                            if('' !== block[key][name] && undefined !== block[key][name]){\r\n                                dispatch('block-lmatMachineTranslate/translate').metaFieldsSaveSource(field.data.key, block[key][name][0]);\r\n                            }\r\n                        }else if(currentValue && '' !== currentValue && undefined !== currentValue){\r\n                            dispatch('block-lmatMachineTranslate/translate').metaFieldsSaveSource(field.data.key, currentValue);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        } else if(['title', 'excerpt'].includes(key)){\r\n            if(block[key] && block[key].trim() !== ''){\r\n                const action = `${key}SaveSource`;\r\n                dispatch('block-lmatMachineTranslate/translate')[action](block[key]);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport default GutenbergBlockSaveSource;","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"React\"];","module.exports = window[\"ReactDOM\"];","module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import SettingModal from './popupSettingModal/index.js';\r\nimport './global-store/index.js';\r\nimport { useEffect, useState } from 'react';\r\nimport GutenbergPostFetch from './FetchPost/Gutenberg/index.js';\r\nimport UpdateGutenbergPage from './createTranslatedPost/Gutenberg/index.js';\r\n// import ProVersionNotice from './component/ProVersionNotice/index.js';\r\nimport Notice from './component/Notice/index.js';\r\nimport { select } from '@wordpress/data';\r\nimport { sprintf, __ } from '@wordpress/i18n';\r\nimport './index.css';\r\n\r\n// Elementor post fetch and update page\r\nimport ElementorPostFetch from './FetchPost/Elementor/index.js';\r\nimport ElementorUpdatePage from './createTranslatedPost/Elementor/index.js';\r\n\r\nimport ReactDOM from \"react-dom/client\";\r\n\r\nconst editorType = window.lmatPageTranslationGlobal.editor_type;\r\n\r\nconst init = () => {\r\n  let lmatMachineTranslateModals = new Array();\r\n  const lmatMachineTranslateSettingModalWrp = '<!-- The Modal --><div id=\"lmat-page-translation-setting-modal\"></div>';\r\n  const lmatMachineTranslateStringModalWrp = '<div id=\"lmat_page_translation_strings_model\" class=\"modal lmat_page_translation_custom_model\"></div>';\r\n\r\n  lmatMachineTranslateModals.push(lmatMachineTranslateSettingModalWrp, lmatMachineTranslateStringModalWrp);\r\n\r\n  lmatMachineTranslateModals.forEach(modal => {\r\n    document.body.insertAdjacentHTML('beforeend', modal);\r\n  });\r\n}\r\n\r\nconst StringModalBodyNotice = () => {\r\n\r\n  const notices = [];\r\n\r\n  if (editorType === 'gutenberg') {\r\n\r\n    const postMetaSync = lmatPageTranslationGlobal.postMetaSync === 'true';\r\n\r\n    if (postMetaSync) {\r\n      notices.push({\r\n        className: 'lmat-page-translation-notice lmat-page-translation-notice-warning', message: <p>\r\n          {__('For accurate custom field translations, please disable the Custom Fields synchronization in ', 'autopoly-ai-translation-for-polylang')}\r\n          <a\r\n            href={`${lmatPageTranslationGlobal.admin_url}admin.php?page=mlang_settings`}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            {__('Polylang settings', 'autopoly-ai-translation-for-polylang')}\r\n          </a>\r\n          {__('. This may affect linked posts or pages.', 'autopoly-ai-translation-for-polylang')}\r\n        </p>\r\n      });\r\n    }\r\n\r\n    const blockRules = select('block-lmatMachineTranslate/translate').getBlockRules();\r\n\r\n    if (!blockRules.LmatBlockParseRules || Object.keys(blockRules.LmatBlockParseRules).length === 0) {\r\n      notices.push({ className: 'lmat-page-translation-notice lmat-page-translation-notice-error', message: <p>{__('No block rules were found. It appears that the block-rules.JSON file could not be fetched, possibly because it is blocked by your server settings. Please check your server configuration to resolve this issue.', 'autopoly-ai-translation-for-polylang')}</p> });\r\n    }\r\n  }\r\n\r\n  const noticeLength = notices.length;\r\n\r\n  if (notices.length > 0) {\r\n    return notices.map((notice, index) => <Notice className={notice.className} key={index} lastNotice={index === noticeLength - 1}>{notice.message}</Notice>);\r\n  }\r\n\r\n  return;\r\n}\r\n\r\n\r\nconst App = () => {\r\n  const [pageTranslate, setPageTranslate] = useState(false);\r\n  const targetLang = window.lmatPageTranslationGlobal.target_lang;\r\n  const postId = window.lmatPageTranslationGlobal.parent_post_id;\r\n  const currentPostId = window.lmatPageTranslationGlobal.current_post_id;\r\n  const postType = window.lmatPageTranslationGlobal.post_type;\r\n  let translatePost, fetchPost, translateWrpSelector;\r\n  const sourceLang = window.lmatPageTranslationGlobal.source_lang;\r\n\r\n  // Elementor post fetch and update page\r\n  if (editorType === 'elementor') {\r\n    translateWrpSelector = 'button.lmat-page-translation-button[name=\"lmat_page_translation_meta_box_translate\"]';\r\n    translatePost = ElementorUpdatePage;\r\n    fetchPost = ElementorPostFetch;\r\n  } else if (editorType === 'gutenberg') {\r\n    translateWrpSelector = 'input#lmat-page-translation-button[name=\"lmat_page_translation_meta_box_translate\"]';\r\n    translatePost = UpdateGutenbergPage;\r\n    fetchPost = GutenbergPostFetch;\r\n  }\r\n\r\n  const [postDataFetchStatus, setPostDataFetchStatus] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n\r\n  const fetchPostData = async (data) => {\r\n    await fetchPost(data);\r\n\r\n    const allEntries = wp.data.select('block-lmatMachineTranslate/translate').getTranslationEntry();\r\n\r\n    let totalStringCount = 0;\r\n    let totalCharacterCount = 0;\r\n    let totalWordCount = 0;\r\n\r\n    allEntries.map(entries => {\r\n      const source = entries.source ? entries.source : '';\r\n      const stringCount = source.split(/(?<=[.!?]+)\\s+/).length;\r\n      const wordCount = source.trim().split(/\\s+/).filter(word => /[^\\p{L}\\p{N}]/.test(word)).length;\r\n      const characterCount = source.length;\r\n\r\n      totalStringCount += stringCount\r\n      totalCharacterCount += characterCount;\r\n      totalWordCount += wordCount;\r\n    });\r\n\r\n    wp.data.dispatch('block-lmatMachineTranslate/translate').translationInfo({ sourceStringCount: totalStringCount, sourceWordCount: totalWordCount, sourceCharacterCount: totalCharacterCount });\r\n  }\r\n\r\n  const updatePostDataFetch = (status) => {\r\n    setPostDataFetchStatus(status);\r\n    setLoading(false);\r\n  }\r\n\r\n  const handlePageTranslate = (status) => {\r\n    setPageTranslate(status);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (pageTranslate) {\r\n      const metaFieldBtn = document.querySelector(translateWrpSelector);\r\n      if (metaFieldBtn) {\r\n        metaFieldBtn.disabled = true;\r\n        metaFieldBtn.value = __(\"Already Translated\", 'autopoly-ai-translation-for-polylang');\r\n      }\r\n    }\r\n  }, [pageTranslate]);\r\n\r\n  if (!sourceLang || '' === sourceLang) {\r\n    const metaFieldBtn = document.querySelector(translateWrpSelector);\r\n    if (metaFieldBtn) {\r\n      metaFieldBtn.title = `Parent ${window.lmatPageTranslationGlobal.post_type} may be deleted.`;\r\n      metaFieldBtn.disabled = true;\r\n    }\r\n    return;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!pageTranslate && sourceLang && '' !== sourceLang && <SettingModal contentLoading={loading} updatePostDataFetch={updatePostDataFetch} postDataFetchStatus={postDataFetchStatus} pageTranslate={handlePageTranslate} postId={postId} currentPostId={currentPostId} targetLang={targetLang} postType={postType} fetchPostData={fetchPostData} translatePost={translatePost} translateWrpSelector={translateWrpSelector} stringModalBodyNotice={StringModalBodyNotice} />}\r\n    </>\r\n  );\r\n};\r\n\r\n/**\r\n * Creates a message popup based on the post type and target language.\r\n * @returns {HTMLElement} The created message popup element.\r\n */\r\nconst createMessagePopup = () => {\r\n  const postType = window.lmatPageTranslationGlobal.post_type;\r\n  const targetLang = window.lmatPageTranslationGlobal.target_lang;\r\n  const targetLangName = lmatPageTranslationGlobal.languageObject[targetLang]['name'];\r\n\r\n  const messagePopup = document.createElement('div');\r\n  messagePopup.id = 'lmat-page-translation-modal-open-warning-wrapper';\r\n  messagePopup.innerHTML = `\r\n    <div class=\"modal-container\" style=\"display: flex\">\r\n      <div class=\"modal-content\">\r\n        <p>${sprintf(__(\"Would you like to duplicate your original %s content and have it automatically translated into %s?\", 'autopoly-ai-translation-for-polylang'), postType, targetLangName)}</p>\r\n        <div>\r\n          <div data-value=\"yes\">${__(\"Yes\", 'autopoly-ai-translation-for-polylang')}</div>\r\n          <div data-value=\"no\">${__(\"No\", 'autopoly-ai-translation-for-polylang')}</div>\r\n        </div>\r\n      </div>\r\n    </div>`;\r\n  return messagePopup;\r\n};\r\n\r\n/**\r\n * Inserts the message popup into the DOM.\r\n */\r\nconst insertMessagePopup = () => {\r\n  const targetElement = document.getElementById('lmat-page-translation-setting-modal');\r\n  const messagePopup = createMessagePopup();\r\n  document.body.insertBefore(messagePopup, targetElement);\r\n};\r\n\r\n/**\r\n * Elementor translate button append\r\n */\r\nconst appendElementorTranslateBtn = () => {\r\n  const translateButtonGroup = jQuery('.MuiButtonGroup-root.MuiButtonGroup-contained').parent();\r\n  const buttonElement = jQuery(translateButtonGroup).find('.elementor-button.lmat-page-translation-button');\r\n  if (translateButtonGroup.length > 0 && buttonElement.length === 0) {\r\n    const buttonHtml = '<button class=\"elementor-button lmat-page-translation-button\" name=\"lmat_page_translation_meta_box_translate\">Translate</button>';\r\n    const buttonElement = jQuery(buttonHtml);\r\n\r\n    translateButtonGroup.prepend(buttonElement);\r\n    $e.internal('document/save/set-is-modified', { status: true });\r\n\r\n    if ('' === window.lmatPageTranslationGlobal.elementorData || window.lmatPageTranslationGlobal.elementorData.length < 1 || elementor.elements.length < 1) {\r\n      buttonElement.attr('disabled', 'disabled');\r\n      buttonElement.attr('title', 'Translation is not available because there is no Elementor data.');\r\n      return;\r\n    }\r\n    \r\n    // Append app root wrapper in body\r\n    init();\r\n\r\n    const root = ReactDOM.createRoot(document.getElementById('lmat-page-translation-setting-modal'));\r\n    root.render(<App />);\r\n  }\r\n\r\n}\r\n\r\nif (editorType === 'gutenberg') {\r\n  // Render App\r\n  window.addEventListener('load', () => {\r\n    \r\n    // Append app root wrapper in body\r\n    init();\r\n\r\n    const sourceLang = window.lmatPageTranslationGlobal.source_lang\r\n\r\n    if (sourceLang && '' !== sourceLang) {\r\n      insertMessagePopup();\r\n    }\r\n\r\n    const root = ReactDOM.createRoot(document.getElementById('lmat-page-translation-setting-modal'));\r\n    root.render(<App />);\r\n  });\r\n}\r\n\r\n// Elementor translate button append\r\nif (editorType === 'elementor') {\r\n  jQuery(window).on('elementor:init', function () {\r\n    elementor.on('document:loaded', appendElementorTranslateBtn);\r\n  });\r\n}\r\n"],"names":["AllowedMetaFields","type","dispatch","ElementorSaveSource","updateAllowedMetaFields","data","allowedMetaFields","fetchPostContent","props","elementorPostData","lmatPageTranslationGlobal","elementorData","JSON","parse","metaFields","content","widgetsContent","Object","keys","forEach","key","id","refPostData","updatePostDataFetch","GutenbergBlockSaveSource","__","GutenbergPostFetch","apiUrl","ajax_url","blockRules","AcfFields","postMetaSync","window","acf","allowedTypes","getFields","field","includes","blockRulesApiSendData","lmat_fetch_block_rules_key","fetchBlockRulesNonce","action","action_block_rules","fetch","method","headers","body","URLSearchParams","then","response","json","setBlockRules","catch","error","console","apiSendData","postId","parseInt","local","targetLang","current_local","sourceLang","lmat_page_translation_nonce","ajax_nonce","action_fetch","post_data","trim","CopyClipboard","text","startCopyStatus","endCopyStatus","navigator","clipboard","writeText","textArea","document","createElement","value","appendChild","select","execCommand","removeChild","setTimeout","err","useEffect","jsx","_jsx","jsxs","_jsxs","ErrorModalBox","message","onClose","Title","dummyElement","jQuery","append","stringifiedMessage","html","remove","clipboardElements","querySelectorAll","length","element","classList","add","addEventListener","e","preventDefault","toolTipExists","querySelector","toolTipElement","textContent","className","getAttribute","removeEventListener","children","onClick","dangerouslySetInnerHTML","__html","FilterBlockNestedAttr","idsArr","attrObj","blockAttr","callBack","childAttr","idArr","filterObj","map","filterObjType","newIdArr","Array","childAttrArray","attrFilter","dynamicBlockAttr","undefined","getPrototypeOf","prototype","_","index","nestedId","push","typeCheck","FilterTargetContent","skipTags","fixHtmlTags","tagRegex","stack","result","lastIndex","match","exec","fullMatch","tagName","isClosingTag","startsWith","currentIndex","slice","tag","openIndex","findIndex","t","splice","i","wrapFirstAndMatchingClosingTag","tempElement","innerHTML","firstElement","firstElementChild","childNodes","childNodesLength","from","sort","a","b","nodeType","replace","filterContent","outerHTML","firstElementOpeningTag","openTagName","toLowerCase","closingTagName","RegExp","closingTagMatch","wrappedFirstTag","firstElementHtml","closeTag","openTag","splitContent","string","pattern","matches","split","filter","Boolean","output","filterSeoContent","regex","filterSourceData","isSeoContent","test","contentKey","shortcodePattern","shortcodeMatches","replaceInnerTextWithSpan","doc","childElements","childElementsReplace","textNode","createTextNode","replaceWith","innerText","service","notTranslatePattern","replacePlaceholderPattern","updatedContent","_Fragment","notTranslate","translate","FormatNumberCount","number","toFixed","Notice","updateNoticeWrapperHeight","parentNoticeWrapper","height","offsetHeight","offsetTop","closest","style","setProperty","lastNotice","AddProgressBar","provider","progressBarSelector","progressBar","css","hide","ShowStringCount","status","characterCount","getTranslationInfo","sourceCharacterCount","stringCount","display","StoreTimeTaken","prefix","start","end","translateStatus","timeTaken","oldTimeTaken","translateData","translationInfo","languages","ModalStringScroll","GoogleTranslater","ID","translateStatusHandler","modalRenderId","lang","srcLang","languageObject","locale","google","TranslateElement","pageLanguage","includedLanguages","defaultLanguage","multilanguagePage","autoDisplay","translateElement","values","item","HTMLElement","sprintf","Fragment","Service","openErrorModalHandler","adminUrl","admin_url","assetsUrl","lmat_url","errorIcon","Services","Provider","title","SettingBtnText","serviceLabel","Docs","heading","BetaEnabled","ButtonDisabled","googleButtonDisabled","ErrorMessage","src","alt","Logo","localAiTranslator","RankMathSeo","updateKeywords","updateTitle","updateDescription","updateBreadcrumbTitle","updateFacebookTitle","updateFacebookDescription","updateTwitterTitle","updateTwitterDescription","SeoPressFields","inputId","val","trigger","target_kw","Tagify","DOM","originalInput","addTags","YoastSeoFields","updateData","setFocusKeyword","setBreadcrumbsTitle","setFacebookPreviewTitle","setFacebookPreviewDescription","setTwitterPreviewTitle","setTwitterPreviewDescription","description","SaveTranslation","translateContent","source","metaFieldsSaveTranslate","contentSaveTranslate","ScrollAnimation","scrollSpeed","scrollHeight","startTime","startScrollTop","scrollTop","animateScroll","currentTime","performance","now","duration","scrollTarget","progress","scrollPosition","currentScrollHeight","clientHeight","scrollPercentage","find","percentage","Math","round","min","toString","updateTranslatedContent","endTime","container","getElementById","stringContainer","translatedData","totalTranslatedData","getAllowedMetaFields","ele","translatedText","dataset","stringType","sourceText","translationEntry","previousTargetStringCount","targetStringCount","previousTargetWordCount","targetWordCount","previousTargetCharacterCount","targetCharacterCount","word","onCompleteTranslation","conainer","animation","top","saveButton","removeAttribute","Date","getTime","translateComplete","ceil","isScrolledToBottom","lmatMachineTranslateUpdateWidgetContent","translations","translation","model","lmatMachineTranslateFindModelById","elementor","elements","models","settings","get","set","translatedContent","repeaterMatch","repeaterKey","subKey","repeaterArray","isArray","repeaterModel","repeaterAttribute","attributes","$e","internal","lmatMachineTranslateUpdateMetaFields","translatedMetaFields","getTranslatedString","inputType","page","setExternalChange","nestedElements","foundModel","updateElementorPage","postContent","modalClose","postID","config","cssProperties","storeSourceStrings","ids","widgetId","substringsToCheck","some","substring","uniqueKey","join","fieldKey","nestedElement","widget","replaceSourceString","translateStrings","wp","getTranslationEntry","sourceString","keyArray","translateValue","parentElement","parentKey","currentElement","update_elementor_data","post_id","elementor_data","stringify","success","translateButton","setAttribute","reloadPreview","filterTranslateAttr","block","blockParseRules","filterAttrArr","blockId","clientId","updateNestedAttribute","obj","path","newObj","current","richText","RichTextData","updateTranslatedAttr","filterAttrObj","childIdArr","uniqueId","blockAttrContent","originalHTML","filterKey","createTranslatedBlock","childBlock","createBlock","blocks","name","blockName","blockTranslateName","LmatBlockParseRules","attribute","translatedBlock","newBlock","cretaeChildBlock","innerBlocks","createBlocks","getBlockRules","parentBlock","insertBlock","translatePost","editPost","postDataUpdate","editPostData","sourceData","postMetaFieldsUpdate","metaFieldsData","meta","postAcfFieldsUpdate","acfFieldObj","getField","fieldName","sourceValue","tinymce","editorId","setContent","postContentUpdate","postContentData","LmatMachineTranslateActionTypes","titleSaveSource","sourceTitle","titleSaveTranslate","traslatedTitle","excerptSaveSource","sourceExcerpt","excerptSaveTranslate","traslatedExcerpt","contentSaveSource","sourceContent","traslatedContent","metaFieldsSaveSource","sourceMetaFields","traslatedMetaFields","sourceStringCount","sourceWordCount","reducer","actions","selectors","createReduxStore","register","store","TranslateDefaultState","excerpt","state","translateEntry","updateTranslateData","totalStringCount","totalWordCount","totalCharacterCount","editorType","editor_type","date","toISOString","update_translate_data","update_translation_key","update_translation_check","log","Providers","TranslateService","SettingModalBody","ServiceProviders","SettingModalFooter","targetLangName","postType","sourceLangName","setSettingVisibility","marginBottom","target","SettingModalHeader","ReactDOM","useState","PopStringModal","googleLanguage","SettingModal","targetBtn","setTargetBtn","modalRender","setModalRender","settingVisibility","source_lang","imgFolder","googleSupport","serviceModalErrors","setServiceModalErrors","errorModalVisibility","setErrorModalVisibility","chromeAiBtnDisabled","setChromeAiBtnDisabled","openModalOnLoadHandler","btnElement","visibility","closeErrorModal","firstRenderBtns","metaFieldBtn","translateWrpSelector","prev","btn","parentWrp","_reactRoot","createRoot","render","currentPostId","pageTranslate","postDataFetchStatus","fetchPostData","contentLoading","stringModalBodyNotice","fetchContent","targetElement","contains","handleSettingVisibility","googleDisabled","buttonDisable","ActiveService","serviceId","btnId","ServiceLabel","href","rel","width","viewBox","fill","xmlns","d","StringPopUpBody","StringModalBodyNotice","documentElement","ServiceSetting","destroyUpdateHandler","updateDestroyHandler","translatePendingStatus","StringPopUpNotice","StringPopUpFooter","color","disabled","updatePostData","StringPopUpHeader","closeModal","setPopupVisibility","popStringModal","selectedService","popupVisibility","setRefPostData","translatePending","setTranslatePending","setCharacterCount","onDestroy","setOnDestroy","callback","serviceProvider","c","toUpperCase","updatePostContentHandler","setPopupVisibilityHandler","click","updatePostDataHandler","stringModal","updatePostContent","storeMetaFields","metaKey","loopCallback","loop","storeWidgetStrings","keysLoop","settingsLoop","settingsItemsLoop","runLoop","childElement","filterAttr","saveTranslatedAttr","getTranslateString","childBlockAttributesContent","blockAttributeContent","parseBlock","currentValue","UpdateGutenbergPage","ElementorPostFetch","ElementorUpdatePage","init","lmatMachineTranslateModals","lmatMachineTranslateSettingModalWrp","lmatMachineTranslateStringModalWrp","modal","insertAdjacentHTML","notices","noticeLength","notice","App","setPageTranslate","target_lang","parent_post_id","current_post_id","post_type","fetchPost","setPostDataFetchStatus","loading","setLoading","allEntries","entries","wordCount","handlePageTranslate","createMessagePopup","messagePopup","insertMessagePopup","insertBefore","appendElementorTranslateBtn","translateButtonGroup","parent","buttonElement","buttonHtml","prepend","attr","root","on"],"sourceRoot":""}